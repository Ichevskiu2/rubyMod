Subject: [PATCH] Повтор создания коммита
---
Index: .gitattributes
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.gitattributes b/.gitattributes
new file mode 100644
--- /dev/null	(revision 445b62c738e41f7d96414f07fe3b23551cc8e125)
+++ b/.gitattributes	(revision 445b62c738e41f7d96414f07fe3b23551cc8e125)
@@ -0,0 +1,9 @@
+#
+# https://help.github.com/articles/dealing-with-line-endings/
+#
+# Linux start script should use lf
+/gradlew        text eol=lf
+
+# These are Windows script files and should use crlf
+*.bat           text eol=crlf
+
Index: .github/workflows/build.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.github/workflows/build.yml b/.github/workflows/build.yml
new file mode 100644
--- /dev/null	(revision 445b62c738e41f7d96414f07fe3b23551cc8e125)
+++ b/.github/workflows/build.yml	(revision 445b62c738e41f7d96414f07fe3b23551cc8e125)
@@ -0,0 +1,30 @@
+# Automatically build the project and run any configured tests for every push
+# and submitted pull request. This can help catch issues that only occur on
+# certain platforms or Java versions, and provides a first line of defence
+# against bad commits.
+
+name: build
+on: [pull_request, push]
+
+jobs:
+  build:
+    runs-on: ubuntu-24.04
+    steps:
+      - name: checkout repository
+        uses: actions/checkout@v4
+      - name: validate gradle wrapper
+        uses: gradle/actions/wrapper-validation@v4
+      - name: setup jdk
+        uses: actions/setup-java@v4
+        with:
+          java-version: '21'
+          distribution: 'microsoft'
+      - name: make gradle wrapper executable
+        run: chmod +x ./gradlew
+      - name: build
+        run: ./gradlew build
+      - name: capture build artifacts
+        uses: actions/upload-artifact@v4
+        with:
+          name: Artifacts
+          path: build/libs/
\ No newline at end of file
Index: .gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.gitignore b/.gitignore
new file mode 100644
--- /dev/null	(revision 445b62c738e41f7d96414f07fe3b23551cc8e125)
+++ b/.gitignore	(revision 445b62c738e41f7d96414f07fe3b23551cc8e125)
@@ -0,0 +1,40 @@
+# gradle
+
+.gradle/
+build/
+out/
+classes/
+
+# eclipse
+
+*.launch
+
+# idea
+
+.idea/
+*.iml
+*.ipr
+*.iws
+
+# vscode
+
+.settings/
+.vscode/
+bin/
+.classpath
+.project
+
+# macos
+
+*.DS_Store
+
+# fabric
+
+run/
+
+# java
+
+hs_err_*.log
+replay_*.log
+*.hprof
+*.jfr
Index: LICENSE
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/LICENSE b/LICENSE
new file mode 100644
--- /dev/null	(revision 445b62c738e41f7d96414f07fe3b23551cc8e125)
+++ b/LICENSE	(revision 445b62c738e41f7d96414f07fe3b23551cc8e125)
@@ -0,0 +1,121 @@
+Creative Commons Legal Code
+
+CC0 1.0 Universal
+
+    CREATIVE COMMONS CORPORATION IS NOT A LAW FIRM AND DOES NOT PROVIDE
+    LEGAL SERVICES. DISTRIBUTION OF THIS DOCUMENT DOES NOT CREATE AN
+    ATTORNEY-CLIENT RELATIONSHIP. CREATIVE COMMONS PROVIDES THIS
+    INFORMATION ON AN "AS-IS" BASIS. CREATIVE COMMONS MAKES NO WARRANTIES
+    REGARDING THE USE OF THIS DOCUMENT OR THE INFORMATION OR WORKS
+    PROVIDED HEREUNDER, AND DISCLAIMS LIABILITY FOR DAMAGES RESULTING FROM
+    THE USE OF THIS DOCUMENT OR THE INFORMATION OR WORKS PROVIDED
+    HEREUNDER.
+
+Statement of Purpose
+
+The laws of most jurisdictions throughout the world automatically confer
+exclusive Copyright and Related Rights (defined below) upon the creator
+and subsequent owner(s) (each and all, an "owner") of an original work of
+authorship and/or a database (each, a "Work").
+
+Certain owners wish to permanently relinquish those rights to a Work for
+the purpose of contributing to a commons of creative, cultural and
+scientific works ("Commons") that the public can reliably and without fear
+of later claims of infringement build upon, modify, incorporate in other
+works, reuse and redistribute as freely as possible in any form whatsoever
+and for any purposes, including without limitation commercial purposes.
+These owners may contribute to the Commons to promote the ideal of a free
+culture and the further production of creative, cultural and scientific
+works, or to gain reputation or greater distribution for their Work in
+part through the use and efforts of others.
+
+For these and/or other purposes and motivations, and without any
+expectation of additional consideration or compensation, the person
+associating CC0 with a Work (the "Affirmer"), to the extent that he or she
+is an owner of Copyright and Related Rights in the Work, voluntarily
+elects to apply CC0 to the Work and publicly distribute the Work under its
+terms, with knowledge of his or her Copyright and Related Rights in the
+Work and the meaning and intended legal effect of CC0 on those rights.
+
+1. Copyright and Related Rights. A Work made available under CC0 may be
+protected by copyright and related or neighboring rights ("Copyright and
+Related Rights"). Copyright and Related Rights include, but are not
+limited to, the following:
+
+  i. the right to reproduce, adapt, distribute, perform, display,
+     communicate, and translate a Work;
+ ii. moral rights retained by the original author(s) and/or performer(s);
+iii. publicity and privacy rights pertaining to a person's image or
+     likeness depicted in a Work;
+ iv. rights protecting against unfair competition in regards to a Work,
+     subject to the limitations in paragraph 4(a), below;
+  v. rights protecting the extraction, dissemination, use and reuse of data
+     in a Work;
+ vi. database rights (such as those arising under Directive 96/9/EC of the
+     European Parliament and of the Council of 11 March 1996 on the legal
+     protection of databases, and under any national implementation
+     thereof, including any amended or successor version of such
+     directive); and
+vii. other similar, equivalent or corresponding rights throughout the
+     world based on applicable law or treaty, and any national
+     implementations thereof.
+
+2. Waiver. To the greatest extent permitted by, but not in contravention
+of, applicable law, Affirmer hereby overtly, fully, permanently,
+irrevocably and unconditionally waives, abandons, and surrenders all of
+Affirmer's Copyright and Related Rights and associated claims and causes
+of action, whether now known or unknown (including existing as well as
+future claims and causes of action), in the Work (i) in all territories
+worldwide, (ii) for the maximum duration provided by applicable law or
+treaty (including future time extensions), (iii) in any current or future
+medium and for any number of copies, and (iv) for any purpose whatsoever,
+including without limitation commercial, advertising or promotional
+purposes (the "Waiver"). Affirmer makes the Waiver for the benefit of each
+member of the public at large and to the detriment of Affirmer's heirs and
+successors, fully intending that such Waiver shall not be subject to
+revocation, rescission, cancellation, termination, or any other legal or
+equitable action to disrupt the quiet enjoyment of the Work by the public
+as contemplated by Affirmer's express Statement of Purpose.
+
+3. Public License Fallback. Should any part of the Waiver for any reason
+be judged legally invalid or ineffective under applicable law, then the
+Waiver shall be preserved to the maximum extent permitted taking into
+account Affirmer's express Statement of Purpose. In addition, to the
+extent the Waiver is so judged Affirmer hereby grants to each affected
+person a royalty-free, non transferable, non sublicensable, non exclusive,
+irrevocable and unconditional license to exercise Affirmer's Copyright and
+Related Rights in the Work (i) in all territories worldwide, (ii) for the
+maximum duration provided by applicable law or treaty (including future
+time extensions), (iii) in any current or future medium and for any number
+of copies, and (iv) for any purpose whatsoever, including without
+limitation commercial, advertising or promotional purposes (the
+"License"). The License shall be deemed effective as of the date CC0 was
+applied by Affirmer to the Work. Should any part of the License for any
+reason be judged legally invalid or ineffective under applicable law, such
+partial invalidity or ineffectiveness shall not invalidate the remainder
+of the License, and in such case Affirmer hereby affirms that he or she
+will not (i) exercise any of his or her remaining Copyright and Related
+Rights in the Work or (ii) assert any associated claims and causes of
+action with respect to the Work, in either case contrary to Affirmer's
+express Statement of Purpose.
+
+4. Limitations and Disclaimers.
+
+ a. No trademark or patent rights held by Affirmer are waived, abandoned,
+    surrendered, licensed or otherwise affected by this document.
+ b. Affirmer offers the Work as-is and makes no representations or
+    warranties of any kind concerning the Work, express, implied,
+    statutory or otherwise, including without limitation warranties of
+    title, merchantability, fitness for a particular purpose, non
+    infringement, or the absence of latent or other defects, accuracy, or
+    the present or absence of errors, whether or not discoverable, all to
+    the greatest extent permissible under applicable law.
+ c. Affirmer disclaims responsibility for clearing rights of other persons
+    that may apply to the Work or any use thereof, including without
+    limitation any person's Copyright and Related Rights in the Work.
+    Further, Affirmer disclaims responsibility for obtaining any necessary
+    consents, permissions or other rights required for any use of the
+    Work.
+ d. Affirmer understands and acknowledges that Creative Commons is not a
+    party to this document and has no duty or obligation with respect to
+    this CC0 or use of the Work.
\ No newline at end of file
Index: build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/build.gradle b/build.gradle
new file mode 100644
--- /dev/null	(revision 445b62c738e41f7d96414f07fe3b23551cc8e125)
+++ b/build.gradle	(revision 445b62c738e41f7d96414f07fe3b23551cc8e125)
@@ -0,0 +1,97 @@
+plugins {
+	id 'fabric-loom' version "${loom_version}"
+	id 'maven-publish'
+	id "org.jetbrains.kotlin.jvm" version "2.2.10"
+}
+
+version = project.mod_version
+group = project.maven_group
+
+base {
+	archivesName = project.archives_base_name
+}
+
+repositories {
+	// Add repositories to retrieve artifacts from in here.
+	// You should only use this when depending on other mods because
+	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
+	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
+	// for more information about repositories.
+}
+
+loom {
+	splitEnvironmentSourceSets()
+
+	mods {
+		"rubymod" {
+			sourceSet sourceSets.main
+			sourceSet sourceSets.client
+		}
+	}
+
+}
+
+dependencies {
+	// To change the versions see the gradle.properties file
+	minecraft "com.mojang:minecraft:${project.minecraft_version}"
+	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
+	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
+
+	// Fabric API. This is technically optional, but you probably want it anyway.
+	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
+	modImplementation "net.fabricmc:fabric-language-kotlin:${project.fabric_kotlin_version}"
+}
+
+processResources {
+	inputs.property "version", project.version
+
+	filesMatching("fabric.mod.json") {
+		expand "version": inputs.properties.version
+	}
+}
+
+tasks.withType(JavaCompile).configureEach {
+	it.options.release = 17
+}
+
+tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
+	kotlinOptions {
+		jvmTarget = 17
+	}
+}
+
+java {
+	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
+	// if it is present.
+	// If you remove this line, sources will not be generated.
+	withSourcesJar()
+
+	sourceCompatibility = JavaVersion.VERSION_17
+	targetCompatibility = JavaVersion.VERSION_17
+}
+
+jar {
+	inputs.property "archivesName", project.base.archivesName
+
+	from("LICENSE") {
+		rename { "${it}_${inputs.properties.archivesName}"}
+	}
+}
+
+// configure the maven publication
+publishing {
+	publications {
+		create("mavenJava", MavenPublication) {
+			artifactId = project.archives_base_name
+			from components.java
+		}
+	}
+
+	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
+	repositories {
+		// Add repositories to publish to here.
+		// Notice: This block does NOT have the same function as the block in the top level.
+		// The repositories here will be used for publishing your artifact, not for
+		// retrieving dependencies.
+	}
+}
\ No newline at end of file
Index: gradle.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/gradle.properties b/gradle.properties
new file mode 100644
--- /dev/null	(revision 445b62c738e41f7d96414f07fe3b23551cc8e125)
+++ b/gradle.properties	(revision 445b62c738e41f7d96414f07fe3b23551cc8e125)
@@ -0,0 +1,19 @@
+# Done to increase the memory available to gradle.
+org.gradle.jvmargs=-Xmx1G
+org.gradle.parallel=true
+
+# Fabric Properties
+# check these on https://fabricmc.net/develop
+minecraft_version=1.20.1
+yarn_mappings=1.20.1+build.10
+loader_version=0.17.2
+loom_version=1.11-SNAPSHOT
+fabric_kotlin_version=1.13.5+kotlin.2.2.10
+
+# Mod Properties
+mod_version=1.0.0
+maven_group=com.rubymod
+archives_base_name=rubymod
+
+# Dependencies
+fabric_version=0.92.6+1.20.1
\ No newline at end of file
Index: gradle/wrapper/gradle-wrapper.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/gradle/wrapper/gradle-wrapper.properties b/gradle/wrapper/gradle-wrapper.properties
new file mode 100644
--- /dev/null	(revision 445b62c738e41f7d96414f07fe3b23551cc8e125)
+++ b/gradle/wrapper/gradle-wrapper.properties	(revision 445b62c738e41f7d96414f07fe3b23551cc8e125)
@@ -0,0 +1,7 @@
+distributionBase=GRADLE_USER_HOME
+distributionPath=wrapper/dists
+distributionUrl=https\://services.gradle.org/distributions/gradle-8.14.2-bin.zip
+networkTimeout=10000
+validateDistributionUrl=true
+zipStoreBase=GRADLE_USER_HOME
+zipStorePath=wrapper/dists
Index: gradlew
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/gradlew b/gradlew
new file mode 100644
--- /dev/null	(revision 445b62c738e41f7d96414f07fe3b23551cc8e125)
+++ b/gradlew	(revision 445b62c738e41f7d96414f07fe3b23551cc8e125)
@@ -0,0 +1,251 @@
+#!/bin/sh
+
+#
+# Copyright © 2015-2021 the original authors.
+#
+# Licensed under the Apache License, Version 2.0 (the "License");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#      https://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+#
+# SPDX-License-Identifier: Apache-2.0
+#
+
+##############################################################################
+#
+#   Gradle start up script for POSIX generated by Gradle.
+#
+#   Important for running:
+#
+#   (1) You need a POSIX-compliant shell to run this script. If your /bin/sh is
+#       noncompliant, but you have some other compliant shell such as ksh or
+#       bash, then to run this script, type that shell name before the whole
+#       command line, like:
+#
+#           ksh Gradle
+#
+#       Busybox and similar reduced shells will NOT work, because this script
+#       requires all of these POSIX shell features:
+#         * functions;
+#         * expansions «$var», «${var}», «${var:-default}», «${var+SET}»,
+#           «${var#prefix}», «${var%suffix}», and «$( cmd )»;
+#         * compound commands having a testable exit status, especially «case»;
+#         * various built-in commands including «command», «set», and «ulimit».
+#
+#   Important for patching:
+#
+#   (2) This script targets any POSIX shell, so it avoids extensions provided
+#       by Bash, Ksh, etc; in particular arrays are avoided.
+#
+#       The "traditional" practice of packing multiple parameters into a
+#       space-separated string is a well documented source of bugs and security
+#       problems, so this is (mostly) avoided, by progressively accumulating
+#       options in "$@", and eventually passing that to Java.
+#
+#       Where the inherited environment variables (DEFAULT_JVM_OPTS, JAVA_OPTS,
+#       and GRADLE_OPTS) rely on word-splitting, this is performed explicitly;
+#       see the in-line comments for details.
+#
+#       There are tweaks for specific operating systems such as AIX, CygWin,
+#       Darwin, MinGW, and NonStop.
+#
+#   (3) This script is generated from the Groovy template
+#       https://github.com/gradle/gradle/blob/HEAD/platforms/jvm/plugins-application/src/main/resources/org/gradle/api/internal/plugins/unixStartScript.txt
+#       within the Gradle project.
+#
+#       You can find Gradle at https://github.com/gradle/gradle/.
+#
+##############################################################################
+
+# Attempt to set APP_HOME
+
+# Resolve links: $0 may be a link
+app_path=$0
+
+# Need this for daisy-chained symlinks.
+while
+    APP_HOME=${app_path%"${app_path##*/}"}  # leaves a trailing /; empty if no leading path
+    [ -h "$app_path" ]
+do
+    ls=$( ls -ld "$app_path" )
+    link=${ls#*' -> '}
+    case $link in             #(
+      /*)   app_path=$link ;; #(
+      *)    app_path=$APP_HOME$link ;;
+    esac
+done
+
+# This is normally unused
+# shellcheck disable=SC2034
+APP_BASE_NAME=${0##*/}
+# Discard cd standard output in case $CDPATH is set (https://github.com/gradle/gradle/issues/25036)
+APP_HOME=$( cd -P "${APP_HOME:-./}" > /dev/null && printf '%s\n' "$PWD" ) || exit
+
+# Use the maximum available, or set MAX_FD != -1 to use that value.
+MAX_FD=maximum
+
+warn () {
+    echo "$*"
+} >&2
+
+die () {
+    echo
+    echo "$*"
+    echo
+    exit 1
+} >&2
+
+# OS specific support (must be 'true' or 'false').
+cygwin=false
+msys=false
+darwin=false
+nonstop=false
+case "$( uname )" in                #(
+  CYGWIN* )         cygwin=true  ;; #(
+  Darwin* )         darwin=true  ;; #(
+  MSYS* | MINGW* )  msys=true    ;; #(
+  NONSTOP* )        nonstop=true ;;
+esac
+
+CLASSPATH="\\\"\\\""
+
+
+# Determine the Java command to use to start the JVM.
+if [ -n "$JAVA_HOME" ] ; then
+    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
+        # IBM's JDK on AIX uses strange locations for the executables
+        JAVACMD=$JAVA_HOME/jre/sh/java
+    else
+        JAVACMD=$JAVA_HOME/bin/java
+    fi
+    if [ ! -x "$JAVACMD" ] ; then
+        die "ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME
+
+Please set the JAVA_HOME variable in your environment to match the
+location of your Java installation."
+    fi
+else
+    JAVACMD=java
+    if ! command -v java >/dev/null 2>&1
+    then
+        die "ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.
+
+Please set the JAVA_HOME variable in your environment to match the
+location of your Java installation."
+    fi
+fi
+
+# Increase the maximum file descriptors if we can.
+if ! "$cygwin" && ! "$darwin" && ! "$nonstop" ; then
+    case $MAX_FD in #(
+      max*)
+        # In POSIX sh, ulimit -H is undefined. That's why the result is checked to see if it worked.
+        # shellcheck disable=SC2039,SC3045
+        MAX_FD=$( ulimit -H -n ) ||
+            warn "Could not query maximum file descriptor limit"
+    esac
+    case $MAX_FD in  #(
+      '' | soft) :;; #(
+      *)
+        # In POSIX sh, ulimit -n is undefined. That's why the result is checked to see if it worked.
+        # shellcheck disable=SC2039,SC3045
+        ulimit -n "$MAX_FD" ||
+            warn "Could not set maximum file descriptor limit to $MAX_FD"
+    esac
+fi
+
+# Collect all arguments for the java command, stacking in reverse order:
+#   * args from the command line
+#   * the main class name
+#   * -classpath
+#   * -D...appname settings
+#   * --module-path (only if needed)
+#   * DEFAULT_JVM_OPTS, JAVA_OPTS, and GRADLE_OPTS environment variables.
+
+# For Cygwin or MSYS, switch paths to Windows format before running java
+if "$cygwin" || "$msys" ; then
+    APP_HOME=$( cygpath --path --mixed "$APP_HOME" )
+    CLASSPATH=$( cygpath --path --mixed "$CLASSPATH" )
+
+    JAVACMD=$( cygpath --unix "$JAVACMD" )
+
+    # Now convert the arguments - kludge to limit ourselves to /bin/sh
+    for arg do
+        if
+            case $arg in                                #(
+              -*)   false ;;                            # don't mess with options #(
+              /?*)  t=${arg#/} t=/${t%%/*}              # looks like a POSIX filepath
+                    [ -e "$t" ] ;;                      #(
+              *)    false ;;
+            esac
+        then
+            arg=$( cygpath --path --ignore --mixed "$arg" )
+        fi
+        # Roll the args list around exactly as many times as the number of
+        # args, so each arg winds up back in the position where it started, but
+        # possibly modified.
+        #
+        # NB: a `for` loop captures its iteration list before it begins, so
+        # changing the positional parameters here affects neither the number of
+        # iterations, nor the values presented in `arg`.
+        shift                   # remove old arg
+        set -- "$@" "$arg"      # push replacement arg
+    done
+fi
+
+
+# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
+DEFAULT_JVM_OPTS='"-Xmx64m" "-Xms64m"'
+
+# Collect all arguments for the java command:
+#   * DEFAULT_JVM_OPTS, JAVA_OPTS, and optsEnvironmentVar are not allowed to contain shell fragments,
+#     and any embedded shellness will be escaped.
+#   * For example: A user cannot expect ${Hostname} to be expanded, as it is an environment variable and will be
+#     treated as '${Hostname}' itself on the command line.
+
+set -- \
+        "-Dorg.gradle.appname=$APP_BASE_NAME" \
+        -classpath "$CLASSPATH" \
+        -jar "$APP_HOME/gradle/wrapper/gradle-wrapper.jar" \
+        "$@"
+
+# Stop when "xargs" is not available.
+if ! command -v xargs >/dev/null 2>&1
+then
+    die "xargs is not available"
+fi
+
+# Use "xargs" to parse quoted args.
+#
+# With -n1 it outputs one arg per line, with the quotes and backslashes removed.
+#
+# In Bash we could simply go:
+#
+#   readarray ARGS < <( xargs -n1 <<<"$var" ) &&
+#   set -- "${ARGS[@]}" "$@"
+#
+# but POSIX shell has neither arrays nor command substitution, so instead we
+# post-process each arg (as a line of input to sed) to backslash-escape any
+# character that might be a shell metacharacter, then use eval to reverse
+# that process (while maintaining the separation between arguments), and wrap
+# the whole thing up as a single "set" statement.
+#
+# This will of course break if any of these variables contains a newline or
+# an unmatched quote.
+#
+
+eval "set -- $(
+        printf '%s\n' "$DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS" |
+        xargs -n1 |
+        sed ' s~[^-[:alnum:]+,./:=@_]~\\&~g; ' |
+        tr '\n' ' '
+    )" '"$@"'
+
+exec "$JAVACMD" "$@"
Index: gradlew.bat
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/gradlew.bat b/gradlew.bat
new file mode 100644
--- /dev/null	(revision 445b62c738e41f7d96414f07fe3b23551cc8e125)
+++ b/gradlew.bat	(revision 445b62c738e41f7d96414f07fe3b23551cc8e125)
@@ -0,0 +1,94 @@
+@rem
+@rem Copyright 2015 the original author or authors.
+@rem
+@rem Licensed under the Apache License, Version 2.0 (the "License");
+@rem you may not use this file except in compliance with the License.
+@rem You may obtain a copy of the License at
+@rem
+@rem      https://www.apache.org/licenses/LICENSE-2.0
+@rem
+@rem Unless required by applicable law or agreed to in writing, software
+@rem distributed under the License is distributed on an "AS IS" BASIS,
+@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+@rem See the License for the specific language governing permissions and
+@rem limitations under the License.
+@rem
+@rem SPDX-License-Identifier: Apache-2.0
+@rem
+
+@if "%DEBUG%"=="" @echo off
+@rem ##########################################################################
+@rem
+@rem  Gradle startup script for Windows
+@rem
+@rem ##########################################################################
+
+@rem Set local scope for the variables with windows NT shell
+if "%OS%"=="Windows_NT" setlocal
+
+set DIRNAME=%~dp0
+if "%DIRNAME%"=="" set DIRNAME=.
+@rem This is normally unused
+set APP_BASE_NAME=%~n0
+set APP_HOME=%DIRNAME%
+
+@rem Resolve any "." and ".." in APP_HOME to make it shorter.
+for %%i in ("%APP_HOME%") do set APP_HOME=%%~fi
+
+@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
+set DEFAULT_JVM_OPTS="-Xmx64m" "-Xms64m"
+
+@rem Find java.exe
+if defined JAVA_HOME goto findJavaFromJavaHome
+
+set JAVA_EXE=java.exe
+%JAVA_EXE% -version >NUL 2>&1
+if %ERRORLEVEL% equ 0 goto execute
+
+echo. 1>&2
+echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH. 1>&2
+echo. 1>&2
+echo Please set the JAVA_HOME variable in your environment to match the 1>&2
+echo location of your Java installation. 1>&2
+
+goto fail
+
+:findJavaFromJavaHome
+set JAVA_HOME=%JAVA_HOME:"=%
+set JAVA_EXE=%JAVA_HOME%/bin/java.exe
+
+if exist "%JAVA_EXE%" goto execute
+
+echo. 1>&2
+echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME% 1>&2
+echo. 1>&2
+echo Please set the JAVA_HOME variable in your environment to match the 1>&2
+echo location of your Java installation. 1>&2
+
+goto fail
+
+:execute
+@rem Setup the command line
+
+set CLASSPATH=
+
+
+@rem Execute Gradle
+"%JAVA_EXE%" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% "-Dorg.gradle.appname=%APP_BASE_NAME%" -classpath "%CLASSPATH%" -jar "%APP_HOME%\gradle\wrapper\gradle-wrapper.jar" %*
+
+:end
+@rem End local scope for the variables with windows NT shell
+if %ERRORLEVEL% equ 0 goto mainEnd
+
+:fail
+rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of
+rem the _cmd.exe /c_ return code!
+set EXIT_CODE=%ERRORLEVEL%
+if %EXIT_CODE% equ 0 set EXIT_CODE=1
+if not ""=="%GRADLE_EXIT_CONSOLE%" exit %EXIT_CODE%
+exit /b %EXIT_CODE%
+
+:mainEnd
+if "%OS%"=="Windows_NT" endlocal
+
+:omega
Index: settings.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/settings.gradle b/settings.gradle
new file mode 100644
--- /dev/null	(revision 445b62c738e41f7d96414f07fe3b23551cc8e125)
+++ b/settings.gradle	(revision 445b62c738e41f7d96414f07fe3b23551cc8e125)
@@ -0,0 +1,10 @@
+pluginManagement {
+	repositories {
+		maven {
+			name = 'Fabric'
+			url = 'https://maven.fabricmc.net/'
+		}
+		mavenCentral()
+		gradlePluginPortal()
+	}
+}
\ No newline at end of file
Index: src/client/java/com/rubymod/mixin/client/ExampleClientMixin.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/client/java/com/rubymod/mixin/client/ExampleClientMixin.java b/src/client/java/com/rubymod/mixin/client/ExampleClientMixin.java
new file mode 100644
--- /dev/null	(revision 445b62c738e41f7d96414f07fe3b23551cc8e125)
+++ b/src/client/java/com/rubymod/mixin/client/ExampleClientMixin.java	(revision 445b62c738e41f7d96414f07fe3b23551cc8e125)
@@ -0,0 +1,15 @@
+package com.rubymod.mixin.client;
+
+import net.minecraft.client.MinecraftClient;
+import org.spongepowered.asm.mixin.Mixin;
+import org.spongepowered.asm.mixin.injection.At;
+import org.spongepowered.asm.mixin.injection.Inject;
+import org.spongepowered.asm.mixin.injection.callback.CallbackInfo;
+
+@Mixin(MinecraftClient.class)
+public class ExampleClientMixin {
+	@Inject(at = @At("HEAD"), method = "run")
+	private void init(CallbackInfo info) {
+		// This code is injected into the start of MinecraftClient.run()V
+	}
+}
\ No newline at end of file
Index: src/client/kotlin/com/rubymod/RubyModClient.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/client/kotlin/com/rubymod/RubyModClient.kt b/src/client/kotlin/com/rubymod/RubyModClient.kt
new file mode 100644
--- /dev/null	(revision 445b62c738e41f7d96414f07fe3b23551cc8e125)
+++ b/src/client/kotlin/com/rubymod/RubyModClient.kt	(revision 445b62c738e41f7d96414f07fe3b23551cc8e125)
@@ -0,0 +1,9 @@
+package com.rubymod
+
+import net.fabricmc.api.ClientModInitializer
+
+object RubyModClient : ClientModInitializer {
+	override fun onInitializeClient() {
+		// This entrypoint is suitable for setting up client-specific logic, such as rendering.
+	}
+}
\ No newline at end of file
Index: src/client/resources/rubymod.client.mixins.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/client/resources/rubymod.client.mixins.json b/src/client/resources/rubymod.client.mixins.json
new file mode 100644
--- /dev/null	(revision 445b62c738e41f7d96414f07fe3b23551cc8e125)
+++ b/src/client/resources/rubymod.client.mixins.json	(revision 445b62c738e41f7d96414f07fe3b23551cc8e125)
@@ -0,0 +1,11 @@
+{
+	"required": true,
+	"package": "com.rubymod.mixin.client",
+	"compatibilityLevel": "JAVA_17",
+	"client": [
+		"ExampleClientMixin"
+	],
+	"injectors": {
+		"defaultRequire": 1
+	}
+}
\ No newline at end of file
Index: src/main/java/com/rubymod/mixin/ExampleMixin.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/rubymod/mixin/ExampleMixin.java b/src/main/java/com/rubymod/mixin/ExampleMixin.java
new file mode 100644
--- /dev/null	(revision 445b62c738e41f7d96414f07fe3b23551cc8e125)
+++ b/src/main/java/com/rubymod/mixin/ExampleMixin.java	(revision 445b62c738e41f7d96414f07fe3b23551cc8e125)
@@ -0,0 +1,15 @@
+package com.rubymod.mixin;
+
+import net.minecraft.server.MinecraftServer;
+import org.spongepowered.asm.mixin.Mixin;
+import org.spongepowered.asm.mixin.injection.At;
+import org.spongepowered.asm.mixin.injection.Inject;
+import org.spongepowered.asm.mixin.injection.callback.CallbackInfo;
+
+@Mixin(MinecraftServer.class)
+public class ExampleMixin {
+	@Inject(at = @At("HEAD"), method = "loadWorld")
+	private void init(CallbackInfo info) {
+		// This code is injected into the start of MinecraftServer.loadWorld()V
+	}
+}
\ No newline at end of file
Index: src/main/kotlin/com/rubymod/RubyMod.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/kotlin/com/rubymod/RubyMod.kt b/src/main/kotlin/com/rubymod/RubyMod.kt
new file mode 100644
--- /dev/null	(revision 445b62c738e41f7d96414f07fe3b23551cc8e125)
+++ b/src/main/kotlin/com/rubymod/RubyMod.kt	(revision 445b62c738e41f7d96414f07fe3b23551cc8e125)
@@ -0,0 +1,44 @@
+package com.rubymod
+
+import net.fabricmc.api.ModInitializer
+import net.fabricmc.fabric.impl.networking.NetworkingImpl.MOD_ID
+import org.slf4j.LoggerFactory
+import net.minecraft.block.AbstractBlock
+import net.minecraft.block.Block
+import net.minecraft.block.MapColor
+import net.minecraft.item.BlockItem
+import net.minecraft.item.Item
+import net.minecraft.registry.Registries
+import net.minecraft.registry.Registry
+import net.minecraft.sound.BlockSoundGroup
+import net.minecraft.util.Identifier
+
+const val MOD_ID = "rubymod"  // <-- объявляем здесь, на уровне пакета
+
+object RubyMod : ModInitializer {
+    private val logger = LoggerFactory.getLogger("rubymod")
+
+    val RubyBlock: Block = Block(
+        AbstractBlock.Settings.create()
+            .mapColor { MapColor.BRIGHT_RED }
+            .strength( 3.0f, 6.0f)
+            .requiresTool()
+            .sounds(BlockSoundGroup.STONE)
+            //.dropsLike()
+    )
+    override fun onInitialize() {
+		// This code runs as soon as Minecraft is in a mod-load-ready state.
+		// However, some things (like resources) may still be uninitialized.
+		// Proceed with mild caution.
+		logger.info("Hello Fabric world!")
+        // Регистрируем блок
+        Registry.register(Registries.BLOCK, Identifier(MOD_ID, "ruby_block"), RubyBlock)
+
+        // Регистрируем BlockItem, чтобы можно было поставить блок в инвентарь
+        Registry.register(
+            Registries.ITEM,
+            Identifier(MOD_ID, "ruby_block"),
+            BlockItem(RubyBlock, Item.Settings())
+        )
+	}
+}
\ No newline at end of file
Index: src/main/resources/data/rubymod/loot_tables/blocks/rubyBlock.json
===================================================================
diff --git a/src/main/resources/data/rubymod/loot_tables/blocks/rubyBlock.json b/src/main/resources/data/rubymod/loot_tables/blocks/rubyBlock.json
new file mode 100644
--- /dev/null	(revision 445b62c738e41f7d96414f07fe3b23551cc8e125)
+++ b/src/main/resources/data/rubymod/loot_tables/blocks/rubyBlock.json	(revision 445b62c738e41f7d96414f07fe3b23551cc8e125)
@@ -0,0 +1,27 @@
+{
+  "type": "minecraft:block",
+  "pools": [
+    {
+      "rolls": 1,
+      "entries": [
+        {
+          "type": "minecraft:item",
+          "name": "rubymod:ruby_block"
+        }
+      ],
+      "conditions": [
+        {
+          "condition": "minecraft:match_tool",
+          "predicate": {
+            "items": [
+              "minecraft:stone_pickaxe",
+              "minecraft:iron_pickaxe",
+              "minecraft:diamond_pickaxe",
+              "minecraft:netherite_pickaxe"
+            ]
+          }
+        }
+      ]
+    }
+  ]
+}
Index: src/main/resources/fabric.mod.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/fabric.mod.json b/src/main/resources/fabric.mod.json
new file mode 100644
--- /dev/null	(revision 445b62c738e41f7d96414f07fe3b23551cc8e125)
+++ b/src/main/resources/fabric.mod.json	(revision 445b62c738e41f7d96414f07fe3b23551cc8e125)
@@ -0,0 +1,48 @@
+{
+	"schemaVersion": 1,
+	"id": "rubymod",
+	"version": "${version}",
+	"name": "RubyMod",
+	"description": "This is an example description! Tell everyone what your mod is about!",
+	"authors": [
+		"Ichevskiu"
+	],
+	"contact": {
+		"homepage": "https://fabricmc.net/",
+		"sources": "https://github.com/FabricMC/fabric-example-mod"
+	},
+	"license": "CC0-1.0",
+	"icon": "assets/rubymod/icon.png",
+	"environment": "*",
+	"entrypoints": {
+		"main": [
+			{
+				"value": "com.rubymod.RubyMod",
+				"adapter": "kotlin"
+			}
+		],
+		"client": [
+			{
+				"value": "com.rubymod.RubyModClient",
+				"adapter": "kotlin"
+			}
+		]
+	},
+	"mixins": [
+		"rubymod.mixins.json",
+		{
+			"config": "rubymod.client.mixins.json",
+			"environment": "client"
+		}
+	],
+	"depends": {
+		"fabricloader": ">=0.17.2",
+		"minecraft": "~1.20.1",
+		"java": ">=17",
+		"fabric-api": "*",
+		"fabric-language-kotlin": "*"
+	},
+	"suggests": {
+		"another-mod": "*"
+	}
+}
\ No newline at end of file
Index: src/main/resources/rubymod.mixins.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/rubymod.mixins.json b/src/main/resources/rubymod.mixins.json
new file mode 100644
--- /dev/null	(revision 445b62c738e41f7d96414f07fe3b23551cc8e125)
+++ b/src/main/resources/rubymod.mixins.json	(revision 445b62c738e41f7d96414f07fe3b23551cc8e125)
@@ -0,0 +1,14 @@
+{
+	"required": true,
+	"package": "com.rubymod.mixin",
+	"compatibilityLevel": "JAVA_17",
+	"mixins": [
+		"ExampleMixin"
+	],
+	"injectors": {
+		"defaultRequire": 1
+	},
+	"overwrites": {
+		"requireAnnotations": true
+	}
+}
\ No newline at end of file
diff --git a/gradle/wrapper/gradle-wrapper.jar b/gradle/wrapper/gradle-wrapper.jar
new file mode 100644
index 0000000000000000000000000000000000000000..1b33c55baabb587c669f562ae36f953de2481846
GIT binary patch
literal 43764
zc$}n~V|ZoVx~5|r6(<!`Y}>YzidSq~72B*hE3VkKZQHEa?)vs_oZjc0@7jI!`ZwqN
zv&MMt_jxgfq6|0$1_%rc3<wAaG01=Xp@6`G$cd>6(MidRGssGbh{>ynsi{JOfd2Jy
zLrdFfjs1)7R8_aRso8HFajCZRi$))1qhd9VWR`@EG=5<+N`MF&t)SN8#|t0UI^~G`
zg9~5UVqSP)pwsiD8`7P$_leoem}6Bxv~KC-FAawFX9klj_N*t@k4BWP5!<8(%1)ox
zhc+{;^HAXD^+ZPB4r6Nl#QO3^Mo5#Ro!(CG>)QP#UXA8Pn44Q!#=-lIZ3F7%<>D^D
zNjvQReCU2-qL0U0XIh(MY~tPX`4*g?7<6lVAiC707+P_1Lf^y2^h1<o=b_d@w9J?S
zit{Ab`Yh--wNiTJu38?udXzk7Z|P>bCGEAtj@V9HvTNYN8fp&wiD<BPskC*hVZQX2
z8^qxz)AjQK<lgx!p+2u7eC-9qVow~eB29~z{Drpnuj4=!bwBB9MPv!$A%I=^2lDyR
zfsPi_?}M)fb6LsN)oU{{n@DM3mK1mnGI>);*gU*nEvkZOrKG39#z8JUnV|Hp;4BZ^
ztr(9D<WyiR)Sjl}W+Ahoa$<BL$E4>Pi*6I%B6o8``Nnn-k9Iq13M2$pHwF92%EUvV
zi6+{Ua0mv%X?!MRCWKbN*3EikN`fw)9)%Ialh86_E<LE;C~EyMD}L|G18?p1Ia0i;
zG>MVC#D<_R=Q<ONk5ahIqsZeN3x&`fW7p0Izb&*vSv`!VP`;eLHvMQRI!E{!ibw<z
z9f;R`dJJx#s75ad5wE@Ak1CB=nJGDSCrkg?7scWLX?4xP(>B?G^f^r)+ls4{g6ZMy
z4tfe(zkq}Z+M#`p56L@#Ljl@yKs(P~tqn^BbFz>vu4SiIQ67A7x0Fu%fzxCzSGZ%I
zP)p6J>1M)`K=l<?%nWMgSbgteTf*#g$8YDrT*O`)auK;jBA^}H7YOsLf3{(Ma=D!%
zZgS<&^v)5~+j3gVbHidkw5;emzgT}Y<jBA?%}oX)Dt2@whXWRo&H7<PS72}(*KFu1
z$gsEnGmgDuFo?MzQ{WJZ1auN4mI8Wm244PU`1o8A>BzQ>nr^`U_pQ+n=7(DxO8jkN
z3t7&f_!MP9w;gOI&}HWj&5CjmNy0+g{YKd5oE>F<^9WE)X(DOnU132EM(}q0ooG5p
z1}o+=e5i6dV_<FtmIEZTqC)LCz)TZn8VN87e?1|#MYH@2oA8S%^vpOI&*Yv|^I8d(
zH7p}b9OS}b1?uBY4{hx$WoI%{){+vndNZ`RfGDyNrmfgTuMX#LmzJq+kW4l~M8EO+
zQ>8>2ridO^euW?~csx9Qf0)Zd-i&s}a>r4jg1Gx{)~2}9aGFJKt%16eKE5$Spv9+B
zFIc<t-kYA-6Ps>in;M8^TEC2ZOZBuOFzVq6^3~MYB!&YoSa59NX965%N7Qwpi>*LN
zw8s)6MB^8R&F5JPr@2SxN6s!$Mt!2Yj<4tN!>BUOu@H~Z>E~xlpy4u}f()B)WXU9%
zt?{%VfBcYtCXtB%Rod!al=HLUum$Deb%)p#nh{G+^yJ4hC+)pv(L!yPJ-8UKj7P^5
zHCZLx^C|28$@X*C<L1U?L2rCF%~bEp(kskZwIo}d-y#S$)^Tu!HDwIamn9cb{=rFY
zeS<Ii;u<50=EXgQ#>B5}y93G?H8fk`AK$V-P+bBe@p6;C($Rd6hil2lQ$2Hp2~Fpr
zrX~KiAo&T^MnpqYmpt6yn2&`MC7buPj(ru8)0T_7^rqfO#{I-%pF+4@HGN)%vG=Z=
zm~e-(a_PWa9C~C;`V|K_Med40nd<1dg!&*tnHM`;jYW#uW7!DiB@=&i>g}4{OYz1{
z$YZ>XMWtXX*gy1OtWpDQ(g?Q;OPNnX23>gTqm0IVe*|+qx7}C>>gCiT-kVWK1U}Q`
zbPYdCz5bxf>uaEH$l~a5U*lPmHZn^qVFIb9Yz&14L!8S}!?_D7h_sW`edWpKXCnLr
zddIdPM7ne=`<Tvqx!wPC%~nm=);BnUZ^DAFzogznf!KdBlLWJGwy^&AqZx4AXaKpd
z8SCI3;tV_a>Hu%m6M<6VLrOfohd!MqQ;|=Rt-0@`Eq_b;1^qk!+O;qjg*5>Boy}=l
zB0Tr?$95KtX3+~MI)YXVu_Bq`w1bE<ohQH5Az$v<S8E0$%$oLGl>3>Y%J?H8R7J#Y
zhEFV%fn|RJbcb$qlPNe@)83J3h~N3uWxrpc*5u~==SD`uboCl)<8gmaT$+Z0(<H>L
zx1w_J4C@^gEF@($K;FR;M9%^r4#IyNR00v%vu-d^w~?`>jPL7zI}355xHWgK2E54L
z6pcR9Ast63o*f!~&;K-H*a!K=Sd^~<)nSCWFTa}uyYIc{n+&JEzqrWxn2r!KL^%=m
z7A_EYRA|266YbfZ&u%#+215HKNg;C^0#hH1vlO<x`L@C}L52JXzpo}hK+CZ7Ysjx<
zRy1%ExQUXfq-pa4{M&B~)zp<pKl6?|P-tc$d)0gTP`qbazaqZ&M*z3mS~SbNnOTb~
zv^`{pT_c430=exoU<o_AZ-&1~;sNSV1!Hz$a1h_N`XhL4GFpNJ0*%EigNMIT)oT?l
zk2P52QtZAER-X+inpN$y<v0gPt^qqs2p{pb)e$8`r$>L;{YJVz`kk9_+Gjy=jh;MH
zeZ;<&2+a{LZA29O&V%ei8-h}g+}g*vb1`GGM%q6RC!V(4dO3_8aUknPUzb&Z`?V*c
zJEQJPb}RVw@tyt3phF)93Z$uKX-shJ1sI@4c{n2?N>(upiE86*#T~*yC`UzdAg6yF
zn=cSSxsqAb95}koG?SU>;3^p$so<zrS}a~xiCUlc>9ZGFnO$*lk$P!s7U!)1zJfP5
zdFh|Tvqmvhi2z1#Jep=QqMueW?J0c)EH4?76)L7r#}ty<&E!De6N--WM;4Z#>>R92
z`#JWd(_90NJ#L2bq&jP~_|8{qRQ;=X^+~Ld9FDVWqx_e2(PS^B&>Tm`9Ek7POLL$}
z(=NR@v}tXspi>8U+L_wlp(<15TD<M-d!+BBictLhkm9l+!EEkvkv*b1Pwe@j5n0gS
zzX4%8ww$m+o?L7X$G1cYo0DTi_>YN|ZzB*)N@J$zgv<Ag*@?zN%BkNr47(B~jLE;1
zT+rRIr72e56L69Upx>)-ZkA9ls2SmzpOG1YRoj1Jt$RdR7;iK7gRtnxlBcT+P4)A3
z#}r==g?L<S?&gInYY5dRhuq78$V2I;(I|!qNK`V%?6cM`!j5%xZ_k-u_9ml7j$A~@
z`Uqu^6w1j>>|Up-ljTefsFHXzyRc8lz-4Zz%az(2Z*a<xQ%5_n;*9mn9~7Yf<lOhN
zbbXTpc`OZwY;AEr&W+%9O!o|kmX1DWkQ%3#-1XjbA0?>+sIw1xx;iKS<iBv|9tM;)
zO%zXk%2*v*eEF3Ii4bXUsujE@q1VL>P9M?4p{m~)lEEyyM$q7<DK5#zA<Si8s_cy#
zWD(cWZ`c1j0J^|nU>WT^w>ZCB-~|B~Bg^-TInW(!(;TJDb@rxX*5Y#K66^y?5gR5<
zM04ET*#w3Qx@dhR8U=S#zl6yLb_u(7pyj(UE9brP1FG4}2kG&?(NBFOAv{*3_=Hu}
zvJd=*F23G?i*5?d*^xrUC%MR_xe`Q89Cry==)1}=IcRyyslz(rjDRg~wq`}JW#u0^
zk$C4NF1<2qTHatEu&!K#WMQSYvFqK+N6~cZ0iZV|Yz!7~>SUqM>uypDH1n9DP{nkX
zAM7y<6q6l;EnfsbtZPumCS>2*muWeAnsZVfyEggOBNZa=J!@L^H*NbjxVuuiycoWe
z3G@r3mf_{{q}%!B*mIxGO0n)pCr3-EK+R;TLS=FbC(0D%g$!ql&|=^EdVKCQf|OP1
zF=$*ajV&-Vb!}B%z+b<fzid?H9_$_+gdV&TVF+KQK9;Q^{_ru_G4a+Z?*SkaeX+W}
z2E1R}I*l!)*umqqe+PN@T2`H_0N)t5*Wg6Ny2@nhSdg4L>1Gqf>J+|CMd8Ruy{Vt!
z+7@+R2U%K0t>sZUT_$HKdG%6HA3VgWIGUgx+7vjv;`)h!<umPAhS$ogZ+L(y_@mYT
z&H(4C1PGuwhRJeew}j>Rjv^?+&wM;zIn&)K?V{Vic45do8l9NKF!+jz4w-qv;VBao
zleD(OOR}jQL<ju_6_CGnJ@(vl%tb}SnFLF3#cK1L0&HJvWpu+iB(|(i18g=GT&L>F
zmaokxBnZrKOaoTZz`ZCE%Tdo<&^)unf0MJa(c3IWjd#(qosHkdc_iJa|7U#8@gxsR
z--5TH{rzs1`!rna1~$@i7Sn<d$Mf$i77UZQN3`OgVOVk1_LNo}It|j5d85=}M9d!e
zEr=d%5QNQj!uA?R6i)0=$!P^>2R(88qOnt@xo;NdU7esf+tDbU>)QiPP;ZP_k!V(6
zTEt%&F4`r7xn&|0yb3PnocTIvy{}v8s;3?85EO(gX1Q9di_>VX8nsZfLFVH_YH2Wu
z@{X8FB)UikvMhPtETwS6YQAUWwlS^^DgeWp+J%;d4#za;><P!Qw)9W@a%*~?7VxXl
zch#A3qkgBs${*$1)jP|%;-PUhb$tO6SN@0+OgBin`&N`_tAv(UET!}X%9lKfFR>CQ
zhiQjvYlPjUUarv6T*DobaqqPESZ6gQjxz4dd?0Buzu}~DTp<QD5lAy+njBg(@VxHs
zb!SXUa2)nUl0Dk^BTmdn950_9zq_dnue>a^6YBA_OHl?Irn)Jg@B|SAq>};!MDf4v
z7cu^0zbGdpFC{LfqDn6({=a)hx~MU@UPctLNB`&0w{D0HQ>^;1Y2yPUzQr1dSytJA
zkIo7guPLr2l^BLfL_1ox$(7TN6@PApZ`b`TO4{P>{VB_*iPJ1Ko$$%MV52JI?vkoy
z3w2SZZw|LB%`10Z9j&>ova$WxDQg`0cu;!UOONh|J<k^~aPwGyts=z&>9^OPzmWv;
zcdKCfvkE&$GX^t9fU&g+gORlbgNU7t4Zzk|*230A$kEKj#>CcH%-zVu-r2&=mfpx3
z;N<kbmnf$&Aq~!ilD)jTsKpR~70dPO+|^>BRu#42_*e0l_Tm)_+zjJX<0cqGqW-2U
zGWRP`Z%T(R7+L=Qmu4UQU7G?R1~AYFdW~z}Z~C!>D`yJ5#}5)7o5!syqbZ#aNiqs0
z+a&@?zJ}AFlC%i7AQd8dw_}hS#2!)ClEgZ*88P7^?q3D8^FN>KrwpQ?s*~WNh!)q2
z+^td>avX!7lklJ9JSI{OApWogHJZ*gD@=7SMr1xV)f*U%oHwA2j-g0v=q*%9civO8
zn89p{MY}z{AfLy<7YK_Ei?*lEPOhB(@_B*?6-{&Q>@cx?Z2V%Dg|+ZKwfK?1yhjf&
zecDtpXPSu7Pd7k~QCj(zD-1y|(l^1q@>i(WDuEc>1%eVE@V}G*>xI}N`Lkd4pns<X
z`QIv`@Lz4eiL$l=x)RC<5=KfRjbbj0o<m1Np$Q#~I%6ja1DRUXH<T!b;<nIp{|?qR
z?L4L%fji`<QgJeKL+=N-C!YD0;8ire$;`CdiN}ewH2oi)?;wnk-$EX}yryXE>bW^w
zgRCqg(`yPb+4`K)XAgmQ>j`^l0lS^mkjM~x?Cy%pxV_7;TJpJcwhlZfVigw2_?xsN
zVfmfaitMIGuxA>p&)RfrMS|1Yh0HCz4Fxno47!ndZN12nk-N!hEosst7;UR-po}4^
z6IRb5?vyq?j0evtw$JPJ!M4lF`VaV_ZKlaT)iac8;Ls5I*1S{C*xl%S8anBs6omu=
zcL&1!0QI=wTEP1IAzt%&QORh<7P|)goe-<446@{3u9_(}gb)x?86=F}IJb;Z&cv30
zJJbL&x-Ba<4&!Bm<1PwaoK1=zom4|Ls2yeBEFed!z6Mi}EF7G;<h80A+@SKXq38fe
zg4Ep(ZJ&XJ^G0G(fK*8T>R}x;^(1LlKbMYTe1xq}bAjO%r9;H%Iay^;?~#i(<uo>w
z@qTdj6l3<78)mB`zP_>p;?i7m1fER_`X!v>yslP6@va*7kF($iu%fx)e93_p2lw)c
z4K^&pY=6QX+pM3fN*tKuXm}iQA=VepwgrxOw@QIu%;jiND;uFR`L1Ip!_dd-BPdk_
zFtk1)n3eQT2J=D&)CX{C(@JcNy(pQ30Nhw3Wk8}1V<I^$c6~yFJD%DMXzZ<_elwl*
zp@YwlWRZ2_5_zJ${wt(J$kt>WU&D(LELn`M-O0hwt}X%48dXTQSV(4LoRv<n9{#~8
zTJ_&TmjZvGY;9aAXA1@bQV0HbD6{-6%8CF-Clg09Aya1)$A4n&^e<c|tDMWD3t{ky
z_!q9t2EaVgRepWf!evZ=8-$ROmBeMt!+tU<YMV0wxHYD2<n<2+J|TQeLwuX*hrR+v
zxvin0q_bX-JDDA3J6)#nxcPoQU&D8U!6D?t#OSH>W3$<w!&~6Vgs5>yhhRP-F73tR
zNzNf#3%yFa2ZRP>w(+u7=mO3|<pfw$PS@eZM$9>jrtpgJhDzw@C$-^YValkB-#q7T
z%}Lh}4teQ<opq>!91BI-poN2zA|Gg+kdLT~=#ZjfMGO#LOs7>-+%G%>dJvLSTrryX
zlp1-P+Hs%wQ(couI<~1XEIkVeVH;+`f<tj%aHRRDZ0c~XCC#yoCBK`YK;?T93&Pvx
zz}Jm4KJ_Qt-X#IZm+-Q;43DQO4w`1C;}?Md&S+w?L~OwnK>txFn~<aGJU?`wdu8ho
zvir*3ER~(O!$it04?>^+8+6kg<WjJQ((XY*J$N<^Le{l|!lG3RL!jFY+V?)rz~iC{
zvkFfcK89M|St$baX7NYt;d{aC#l!DSxF7oNA;0tj*wzh)!ye;zX+|wxgvE(B^m$xZ
z96N3zl;5gPLuMRt-RwES*M1sepMgyqFp@Rf=$rdRuVz=1So*ORG3D>^6Do>S%+eSQ
z50Wfq_{x=Nv>(EbtEgDqE#ipp5$1mvm~bgDAD^*AgT0HF!)!#S7{=%V?9=SpC4JBk
zD27-goXU7#JPq16>}3=}z}Bwh{9LBTH!65)v=2Db*W$WmMM{usxY_ESK>9U3l1^of
zzK8u7vBmUy7?q#s=65JnTaMX@9R82|ZdDGQru_%vMu@+InD^g-SlGnW&e25N!qLfD
z#l`S{e*YJm8`P{6<_s`=^#tJ>D6y`6aWHYLY0#&+esXkcljJ%`Gt07Gwx(9hj?KE}
zGQF_K-qi^RqGOU?-%RuqneghGK?sdvEtQ{pZ60ObW{!Ei>>U*|fQUN;?kwCMxz#Ex
zkSwJJ=_*sG`Y6f$YBf?rOneP7vPw}wBXbL;YNjx+>*bTHg7FzC`<~5RGc2c2FmL(2
z&RvZK3~xZzRFsHMMw8=J`$vswI@uMq4j!<udMt!4$ZFXnfgXN|RG(}LDHhSJAwg3;
zr@^0T*rWLHbT=IU7ZSCXGG~&SDjUBjN6L4u`K3vQ#rTBXjc?~cAzW<eTm9MdvsO(F
z12A|;r{JQ(66JCq&J8c2eaeRzm<(K~!q)q=fN~)pm5rG`LR`CIVAdgu3i*sKiIh3B
zZvlEh+L+r7(Nn@1|4tzWAd7?=p^Gdbd$7<VO!DrI@!B}HWlp{dSvqBW6Nyj44cANs
zkC0jesvnC9bBK7Gc^?M;d>A<vVi2JnjSd1w@XBgsusfA94+2uK>f9o-_yl?-f7hF!
z;tc9L=L{o7(9LN4hHqp}51#`t;G5ANkPv>PlFJZ<lmAM-$NAEDfO9C+D`hw!H}}28
zjA3Omf?$*nsxfyP0}9O4A>?|v-*$RyI!y$j?Ox!CZq><&gG!QQL7t$1DXfAT!-BZg
zf3ZnkbE`fI;`oj1vx4U&#VV!xy)4#cMskNz<Y>zz&OQWK6`!a{>N!CMUQ<nDc&(!6
z-He!qINJ5fEHjiS9yIXlVoy8h$B$Qa^IQzsuM|f3M>w8M)o4&YN`u(+=f-#IZxa3#
zIC>IOaflLjZ8t&9pQ^hSI4aG()68<<Ig{of*=66wb~X>hR1AU+Q$=$K7FRH%SUj!3
z;0JLws%B2Vrk{W%i4s2(5{%4KKXi&+oe5LCi_F8<=LKgYqgfqOjYF2aUrt{mNvIIz
z`ilGjJn#&nxy)?KI9CxX<u2IY01Pon?G_o;&7Y&{f-@$xI$w2mN$JaXZ<g3(7nE4E
zsHK|A?7*^{<sU%}rHM!kSAzKZt1{XjmB<`+nWV3c&E5PN%O^WvC%QoX3Q$N%q<;E8
z8AccS?*f$X-w99|TRS(~e`c9~zEN=oIGg-Sgl4IqxS^Y1ee$uItU8NoE!MUp2<6Hp
zihrqTY&X|NjW0O(*5DJ^EX$%W=RYEwnO3g~`RKDXu%Q9rHq#V2>hQb|-Q{^lG`&Z(
z&6T}Jam~*ng(q1(&ybe(y6%;;^}a#3_4$0T1j4@eiNHX_*IIS{FrAyu-!DfuPbiHX
zOaiP=o;V3PJx#%x(88r?nLw=M&O{1Tqev$_JQ0!SKMPt7Rqfk}SENUuC~YaB_eQW?
zYozLUW}a<Wi+B+6==<u=QZCLhL&3q)I?_^+fs+tpzXoiR++1ueY@jQ>j-QUlWehQx
z9bL2VjkdK98KdJtA6qUpz0zErHrh~UFH6_T<ULoj30+J5%~YXO$3fxunov;Isw3<N
zxGf*V{C&tWoI)Yr3PvMB>+A399f%b2+zB2sz4h~jy+AiL8&#e0x^h|?VWeOc)c{A!
zEL0sWQ;<Cm*W-ebHk?RRVqSA|AzHK8rp(A;!y&lWbz^>m0AVQO5c}abaFTFkz1QNx
z42JdG_9Au0Z$L;=v$wiLSO+bINtNw6B3g)c2o48cNk7uEJV7Z?>-vEKM`%8rLo6gJ
zvR_+r5KM=5lO8x)KQ7OcIORBJa%_2n!>Y=HPNO)@yW~t+=Rgh&KUJbzU*$;2FIY;|
zS+^;PnIk5RO3`8^?X5OAtlpYsgRKx%*0;Qr$4P}N#Aaur<;7|ZqD%4$^qePnC|RZ3
zW44Ajq@gdiQ=2O>mL|O*;2oZ`mALiA(a6<RT-`wxMcqfBx4fM#;+iGi+ge5?E3Gm%
z=jt+Hg5*Ii_VCZ2tRuMrN*$XnZ(30EW;hKckpz#HoKkYF;m)vCQi-HgV6-w=#@P+n
z>6q+!ni*Lkx}s4OB&bnsX{ZiAB4WZ&EhW^zFTs(!<@5n+EZb|>(M7R#5wu&U0wrc>
zFDQ!+s4G3gXiB*V(2381{gLvjHcg>KuHmFmQf{sh%N^dz*&l&EBnna?Hg$*JfILWm
z+sL?f%#gi%)_4YY`pk_|l0pBkFW343={pw<r7Ux@*Mw(8#*#P-8vwCA`PD@}i#CeN
z9z=w($-)+zDm>h#Z|m6oa+*R$P5p5|pz@}zKXt2R+^FEhfw?xbC{5$L2R$hkZgaC;
z7;vy50?))jWq=tcgx(o>md**c0}X+x6~^j|>9ZmgULBev0@kZ2x2}<xYNWI}n28xD
z@DL^mvG_|<K!U2iD=i=>A~Ip58aQiDi8aC*Rr6Kc0WWPlq>dBpGB;vmWgWPCB__|c
zOolZXyDJa+Ku`T4?9P0FT5GyKW<L`J`%9)-e_w5m8!-@A^Q#}wWP%-}{+o7&6L}ZN
z&FdFx5y$;vqcfOq$V@+E)W8{_HV}XI{blV?Duf`sedm-FuJ~+KNxWr(!To_(4l}=P
zU0rv~R8y-Q`!Zz%l1uE3HXB_ryBLmMAoYrbN$7L4UpCGG;q~+iO|OVk7A;ddbdJgs
zvkJCj3CEJ9F?kA6F=NDi?&!LrR`{yfn<s1!Obk&iuqlaB%*=zqwiKNcr+>jcwYkY-
z5to>I3k!aqlm9EZPyC{`?52dTu)vq2dIPYHyQKt64OIyRexBiTewXR(Wl?RBJb~tg
z60Eh%&C>z;$L#u%4vKS!ODV6dIkLg(FkgZD4{RASQ1&1dXe3oRz=;K|!g*Tn=oN%|
zldOT9F_=|8y5<u0&u&iuF|SScV8FXlZMMYJ`;J37fy5n)wJ)@`Hu;Pz!u`%XCs$hk
zgTIuH%PDKCazTTs!ZwXgR)j`yBH~iLcg$H)+*48Scf0GTb{22(E<~7VJO?2T>5{x=
zupko#SBz>h$-(26PK+_-7frtKPNO)5d;!dC;Zs%3?ljl7Bw>`8Z;ow#I^}s)4TQkg
znyPJXakJk0Jmn?jZ89)5B6%LT1mzi}4$YHJrdNNm+mkd}wu_8G7u}zEu^jl4s*%fH
z5Qu6V6yO8}-nblvtKcfl9{4A!UiWS#RtT)>3M4Gk2@#?yG`Qf2oJq7-81kqaXS>Gy
zNHju=d~|!m666lAO`HkRK__Py$D9|hV6o$Uer~UOYeUx%eCnHMoH2`F?IFeT1|L%8
zzv2?jBDk)5x=`$%!KxT7s|H~@I(n|?8Xw}uN`{|DSh}7FKRLqPirDsc@=RF(I!oxp
z8;>v(J_Si(Pts<-QQ{F7tKbmY{m(l!ECT3n3jMECjvwe;`T~h!=rm&yBCHZTN?nm;
z@AHIx^IxF~Pt+~rcpHW~=D#Ax9U9Glol^E{7qsxo82t^=Ff^nYrC$TlrR4J#WAX$(
zwgSgmyHGFW)zMaZyy#K#0{>S&z4W`tT!#VyF+}?RE_mfEoSZCd&HkBDg&fWP%XF$@
zqcEq4;Y$w=rycJv-_KDW;L5PEKHuUuLpjrL9Do`aZ|An5`>Vc5W{r+X+&8SN2RZ#%
z_H7&aN&-hg#%!8a$UM>Og3l-WC^OsXVoHDO2S`be!BchDXWq5Em4lPQaARX>8bL)t
zTJ~B40pV&kt4<Z&@Fl#&mEiP{E+O_|CF5g2HlBGI!39KKfeT&Vfo@+6tJb~eLiq-9
z`4;vK58n{6MD<uSH9>H_HC2$EOk}&y4m3vOTl7tZW1o3s=Yua?6miGFy|)T)4MC6M
zqj#C%bNhK%#L059%alutHHXv**CY52gFs!N9~noR(kZf!70o_Sk#SOyJHg8UZIG<5
z0IQ5~-Ij2K55`>*5dHLMZ4vs2b8$+6I&8-hb*6B;Mm?)Ir^uLZ2sbzPvzu0A@xV?y
zAlJ7!Z9i=;!_GZN1E0QPR2_T4m9DEV_ZT^#U5Q?PhxPg+m~t4k|A6?ORk6nJnRRj(
zzb}g7GhqvdSb$`EBtngcU#3Sa9a#ab{wyr+aIfftXa;#m%>hToLZ=rK^T>gix^^(`
zdOw6BwCmkmRV@~aTt2a=<_Hd_v^gf3@(|HdJo7#7S+fyG*>nBLrIih#F5WBus4?g>
zp$XrgnoS?rHpYlG0d`Jqo+BQzNRss>t`~bncE{xuPad<2<P~RzMdH#MOp8PkLOJ5r
z3`+A2`z+Z!i)_r$hFTm<k8A*AC9N0B7`j=D7SaA(C9fqa86ri7wU|`X0mKJpB>xH;
z&4L0&+0!KsC-Pt@?gjBLe*67;c;x;xY^i_Su>D*0;Qs{I4d7_<-`9h|s((5*MQmRr
zyrgIc91c(=V1TW)i4Me|*f5#7q&=-5*;8<)OQ^CrkK-zF|1k13$CD6ZswnyoKY`IF
zSMY<Bayfag>_?BBN5{>F#~h+AkSKuv&h5yE)=Pf+(MzX2+-X$lWr>s;!zy&q0AJm)
zxogc=nABdhbxh;+gUX^yIG-)Ll}hfqJ~|Du1#pqNXMfWd+~<)IB_Hd6W@ev*E|pqZ
zuyx(a=vj5nkP{eUxuLIjijt{@sM&;sMDkXU4kf;&&_*y-STf33RdO<nvY3VO%w!Cj
zB!$|hmNn*U>r~}&$}ut;!~P540!QP}^bGMXv0lPLam3#jo<k%EL;^o@dUGq+(J1HO
zmyAtuPTO_o2(Vj1eJC=gvRMe`GR)l3%jByF`9J6b7;%M5#Lz_;8-IhN)&~K<;tKHz
zcm9e74jc}72n9=5%`%3>ERPZj>{CVZh+A&lPMNTOWDAAUH9OdFD#b$YyJh6%W>B&}
zniH<W5azK&5#A}EMaVZE>x6f;DzsY;EKLQbFKATwLi!-c?G7jMl13-c;ZGIzQUhhO
zEee^HZ}u?f?oCM*uUUh95g6+?L=>;0h`Zr~wX?oYT*7YTPl}?5@J1bBw`QzlNn?;v
zja%9pd9bx*O|<K-PMWZ@r!3YYY%I+t_M%9rrXInbC`R;22Im6y#rJ4%D6x%7ID(qY
z9a2lJBL}KXzC%fELz4Gm50M3`H>{))L}+m_Y6ztRt|nzS1sqVvgP0Jxf!icLrw9|B
zRNA$-!nRlK-vZuQUEtpBEm7`6QOv_%oTMc|qTcW<e5Bg+AYh4arx(?C5hncM>&d64
zKM+4K#h|$v(i9}iLb9dv8qV-zJEv*-cq?4)?k*__(SHd~#+N7%Vy|+Gy;4D;A4ytg
z=RNa?b4)QcJfqKPix{_duP^<O<||N>xg@@^Aq#euu8fT9bc_;g$?VquE0zi&a7dT`
z#F8}R-^CK=zaLBgeHbMx_Q>Ngp%5g-O@sKSe38d*JtY>R)mFw7QzQmO%TtCZ`Ne5}
z>q&tZxYSnLq4Z6azu-p??5|K?5Tao0(662%PuoWxc84CO7Z;x&;C@Kuj89HJ@A+Ps
z{W>~%@&V_92m$wk``?K%-I$jEDHM|JLc!}K;UcyoOrj1JW8+Y3;FYwM&|<iz?J$Lp
zVNH$fVn;Lw=@%;RxvCK`Jo`K3!6hocP^0ImYDigAK1e#-u1)gs$T{JBr$CIRkB<sb
z-6=7dkN3%=mHW_x;}w~?hwGxw3MAx<*ELyl<l(k%ji%k!0R*K8Ul^XkBqGjOxx*P0
zo4Mz)=R2k7Hs}MT%Y4|OS+0seUCbFv8atb&a2e0HCUg>G9fqF9&eM{5j?~*84e>tN
zszq4#)1}7{8jPy9PWjyC+<ZZKs$8v$j$@jATnkYrhlrF+fYURzrO@^6Q1F}k&Etlw
z0v_enFY!=ifdXs>zLu>5igzh-sPa`Cy}zTEusV1-;x%B4$#2?IacC8IkL6@+d%>bo
z<>U#sdS<b=ys~SlofU)*K>q@Qgp<WP?~h(SVE^AE-G2h1;_UdRLiiUJT$FVc{xQ<E
z(mu7c04>YSqmkBbWgU>jW#pIKMMnjLQqdcBc5BuB`9A!+kwN?;^aE6%%|F3>_phSh
zvhka5y=lS<kJ$y6)8)$R-qF$}$RdEzo0n(Ju6<5>ofk8^(C*Y!yXv&)5-Mgte$Ol9
zOgq5-TfsIkcMJ&`v5s_nuKFzG#WZ6~QT4u?U55}`zI<kNxg_Ikic*8E^69)X2_lHV
zcK(EtckMbzF~$si6`i`E3C6CRPuB`N<@n^1#Q<RiysJ$1dNe+u=PFsZ4zsDCByIMW
z&1>ZtpH*nmLo-~k)+XX^I&z*SM>JXAIPB$h`hK?VnoSlAi!|v#-1ev`<?pvneC0-L
z<qyGtfTNfrQ3h;v={=7<$>%s@nFA5TB?r<-R$I$q15ex~#(ZL)C^&?)VIpSiL+Jx4
zOj#UpsHP9<_fp`Ru_U$wX0TmWNgtyCu>K}K1d`U&0on~G;&Zd>H}@<Wb@b~e5SiOO
zZUBui0hSlWoPPL4>X*^9q_<2TDeVwiEZaDMKSmuJ`(Djd(soXiaesH~q4lgW$g@vd
zIaeO4(1N}=E;cKllIWFP5PP9urc=6DjLaOgMY_%-eEk&iW&wWO7ZeJ^(=MqwluS%8
z-!aA;xIEN>toamDXnN4B*dF8?v%;T!r}PrE3sd<9`-7ZbB>4fuCzOVXlH&RwMX64c
z8!FNt=0yJXD1rIk;qGrTxzax^h=N!KoQew4^At#fB$aFeiAf384=P$Hjruj<e_2pW
zdxj)TGV%@sC-HqZ^j$vnAhBW`$w0!p>0$KNGRu$8cMk|Z#HZfvi-(7Lmpus`9bnA6
zjlT1H5rgb%YQ)j(@mDq`<@G$_Y~pynY{<OOU2437w62W<>b{~ag@B|-@DtX&iVByS
z8mX4Xd&e#w#R#zPvCwDxdGZC~^~w|&1bGuBUk0?T1QxY~qC`F)X&IrCV{kP61qy|s
z<cty-Yk1YM;lA~OCl=`p*(h`Gu#2?4AY^489SemEohKlBlr+ot?j56vT?nNKd1zRs
zT{2NF;vL;G!V^(%3k3`P`Y3bI^T#n;QuZYvmRfmhzU1yPXxaRzS{m8dbHl|#C>8G-
zYx^0;v196W>Xr?;<!u?-lQ|<H-j%ePb60TEd-=^uyi1B}p2=m`Z*b6{2QmiABIqGX
z0#0VDgp06Q4eF3v;)vNJ2L@+n{1N(Ro16E<%&pN24FDjkK`>!pQZB@fcuGp!ZEjGo
zZ;#3!TbrUsqbk9F9?zX7#tpCN4fYomFKIvFD*i|}`L}K)@b6HeW^48D4FCRd*rbHQ
zm)eLi3YTJsiJ>vy=-lRqN`s9~#)ON<n1>w}-m=j_3;#N^zL7Wh&%>qygI#2z?oj4Q
zIx##li>EpkH`B>97N^ILm-jsiKaX){Z+=d9rH>MgmIewiZT<NQn~oA~puQ6yVH?2U
z2}nmtA57s+M%mIw+P8|jsHgf!>f?~%6;FA}Hgx4NVUH={0su^=cgZx=dIxM(dJ#hA
z5!jB;C_%*F!4PkB1CKl7Q1A2HTbzqk*{y4;ew>0D4VQ<yScDH%Qea<%&N2~<*eLu=
zIZCGiUfy<BqRctblM)x}LwX54(QB4boeb67{~RLuV^ZD{PdLrCA*uyBA<BiMLU_*M
z#65+5jG8M4uj_a2+dt20(tj%ZEDF#D`lh#x7&Tp^7rgr8HD8NB#lPm%u=G6lA8}wO
zv=l!hBEC2O6vF+Eh;w&O5=@MUOHXMhDuV2p%rQ898TJGln^LIqD26ik)bjQvxX+K$
zq@8+mXv~tRuI0@GD-9N$`j-dE7hH0tcwmf1#?Fro!mOHPCyw;f`axD_+;H*uw*r@b
zM#uG5!nW)d+HaqV4*Bj<eXO<*yHK`F2w6&T;_~mLjdBp@yGx~Qy%DK5+PH8(N500A
z=nlelkcNPMGi<of2=*Q+%kIXnAd#!$@-J_Nzo|XVPEWB7w}vag2EU`5v51(Is_hG&
z;0V9O&gAO1zedR)Bp&Pnm0SO&W2^R<Xky%!ps&?J^V9sGwnC@WKFCU6`-DozPR1=u
zUg1M*i*x{vPknja+TiYcAO@TL>p5!F5@Hk$NZ?9RT&{z;qamJU0Gc!k+K+z>x%C~T
zzd8S*eCThRn!mpl@K37$1?XrsU2Sv;4BsILj{bT{RcqQ)_60OBVn__sH}fb>s<^L0
zHli}28^qt2e-CaTN>}JT-L+2b73w_<t~F}q-v2sxvGbhCnf_GrGVRlNzB<wSJ(=lo
zG|qL&b$dbd`F4XVh-`^4MaY+a`~xLtXSKch?nzK5Bie0{txcIt_5!CdxpcYpYa6L-
zkFHRp$wg6p?eyV>)<87!xZ@mV*0m*-+Rj1}vCsJ3y^9rJG3?o0)p<@u8ad87vx3W<
zs^+&ov|griwC`9!d$Zq-FE3BePZdrKi9Z-222tpj*(A_45LEt@Q!3J__>~zX6=~w!
zRvOgnvl1h7oNhWhlrYS{bN1kQZ5+#zCa1<>Cse9acLaUC9XWF{CQSxIiiTJc6GhOu
zLY7OAD?LKeTt%hU6=I#H&|}yndF1U=y`|CC$3n);WPvQz+6Z#43r%`jwC>E{y|y<_
z$!!NrddY;%7ORhy+P5h_Q=?0djKBHJG(+6{iQ~+>P=(MRLV>wyK#vS$Na$Y9utOLU
z_hM8;a{x?M{`?tIIy>`3I!1W_wn!wsP9LhLDcw`RP)GV1ksD3G;|%T~Dt`3WD4*E_
zhmgho^GN-zO8()W>J>NkmOe@8or%`SJK!OGZPNwYB2a~!^s2e4hR&n~+#G@DZOZsP
zQr;MYu=Qdn!ubeAS;xN;$Lz_O8WNi}ymBWQuR9g$=wk6wcu2nBAlV?5ZlVSzgk!Xl
zwOEu|PzPOnvdX`+LUzpiR}K+Oby&C`&~+{fljs-EU=31b5;Ie;=dbNB-q{YCj;&LL
zwXp##456h5Pcy<2>agRI5H7l(sU>@!?~T@B=tl$ex+xH@qxVAORFaz09Hbi}s@s9D
z=~p94_Td2PF}kq_)ygx=EbE5zg0&(?jf2H>u|$zE9aW7M)t2vcPN#6Kb?K!_+&cNx
zt<Dq+jj9=+X|`u@JIu-Ui>{RXA$2^{Yz-o8jrk<a0Sey=HQb0dy0~(J;|E~+x<AJy
z4c{C~A4@WsZQ<ObcHDjE$OGBaVzyuMN+Z9Y(qsufH<c>*Ca+sr$?a><?Qwd?)0_BX
z?_8AZppjCbw;f&DB`}VDaN7nkg=dhFgjbZ^uSWu8{rV+qmV!*mU@(L3oblXnVV?)s
zeSjvA`U$z%suC9~^R;y06F`Kj)sYc|dPYvk&%CuI%yDJxJMH1{S3L-m`U??QD3NIr
z@V*|=*N05fpP^I^n94<#(FX54>vK(yqpdV}Y97g#v+>_wHsY8^OZP34adu>-cf>iu
zBZUPzz8Wf9`Mony`59ZJtV-*LxV?M$i5HCAxmvi6=YY=`JK)S{aBAXz9|Z0zaK3@>
zqxX89E$=Pw86k_}rP$LxJweW!dqaj}NiOy%O#4r&UFl;eg8QWM=;a{maIU@(bV|G8
zpX0!E_U~xg!x9PfHE1%f)&+f-Nq&YEux4uuA5!6V!B!vHeRv03Gd<BH?Mi<ALMs}Y
zK!dF}cx<QryG8f+9^ON^p+mV5WDbMT>9?ZPui`wugZO<a_)@cB^-pe@qe=$9CcklV
z<a9l^-FoFP#cl#dU$k)ruIrHFOpw7o|B?5Bq|>i8f1J<==Ks+R|6zf~|G^XglN+wN
zqN`zlxF)*Jo@koqDhiT`O0VJLuFc|lf~;vlq}NL(;g*DsjLUPM8<S7Uwi>h;KZA7o
zwSzP@tJ`$bCetwJbo!-shTU&*2^!YU>x_RK<y;D!U#{_Vz2EOmffNClc|G2qY;Vf!
z<rf~B3qz0kwD|Gitz2u2f0mjptGAn<WxgSCw46G=H0QTE*o0bn*|r>q9Nm_l+-Nqd
zhG8uzucL4|IytGV-q8ZGj9K{g+2tIYc`Usn^jg#yX(tK#sN>vnc<2{MemFXsGUF^g
z`#zn4U<YQ_jKvJvVUwG|tjH59*{g2s!%ncGxv35vyp-zFmZoIqd854{47n}%umMWd
ziEGl<4$>)ru{%F?(e|2YVwtl`M(s(|z*G48WY<+Uvg)<846tdr)(=vezK6Q?GOwdE
zhGL!jRCWa*-h^i7)AIy7#^;SNt)n&l<~+?$+KCwM6zgMdw?Zf$Y%|Vo9@@ssX)fNz
z4l$O5VMcJdquMEm0zhCwOmD^NWnKs>F~gb}XJS&~fP>u^ffd?zh&j1fC<sdqilJUZ
zK|x;Fg!t_^NZeaXIP=cT-c*GA5bB|%kCZk-=$X7kBgZCFo`AAZvT1#V%L_yNQ?mzd
zm9{9bJ2jz5q@lY@Y!`8l*a17_1A=fu#y-Erle?-9W-jZrbpI*1*4Ygb(IKUDk{uv#
zZFWn~Bzs9FRH^4+My@Aex%qU5+C$C)rXR7B7{(fhQt93sZ8Q<)DoDOhwiGZ;XgA0u
z?v@-iTHl9A8Ww+^Xj9=8O@@a*nv{qC3amn9OLrvC%0h;+SFvA4hljM!NGeT{cBW$N
zAL1!<{$h&(v{06e<i<m=ruE|~AfB?#ZgtJZ8^Kr?6A$t(Fn}y$riz{Hk=+}f3>Dwd
zEP3}{@Hr1vd;)t4!kt=^SNbMi>1y%T)1`7#n*Zwl)d+Sisd5v#&v41-=|=>qmNyxj
zvN=|=^FlwCVlcTQ!p@h*u;&0v_D8@ua1bwmJX`#<P}nH{LUXvbBX06`-j5$gP%o@a
z=CL8tR01kgNWvlc!cunTLgwysdnm41Zx|O1OVUOSmqr(v4Pv8=Q+|ri^ED;U)8d^R
zcf_=bhEr+4o?Wfy*D*5ouif(Msd%5xflkE%F+k`@r*qh~>K!CGPG=t)&Kv@RLt#XV
zb!&hda*d#0v^#<QodnsYAnn8}GNa=l5l{ck;#|H!SLo9{JTV*hm~t_{)?7UGV(l5`
z`V~WGH(iKxxsvUvPI(&LJ%l4!vv1f0T{`I#kTGvpiNhySA=Wn*e|OKUfmuYjC7KzY
zwKHcCVt`=#&B?lgXd8|07r0LDw~a^ig5M7z3<=i~EFCqnjCem{6f(m3`;MYT>yk=B
z7sFu?#Tyz@>!HuO@;GkF;j-@|S<gDn$u+|iy&>DW=9Q~g<M^)L|1o>EJ``%^{bNi!
ze|r~!_TMn3|MCi_jpBrKpCHP|V(G7jkNVRE5u`jr1hph(F_fOj;D~^2hqkmLD-Nj@
zIXIFBA#ZqO63QnK{v=L1_gm)i$GWZY-;Yy6SbpH;@a<7U91|2>Gz)&S!*<W5N0-mk
zG9jzOI%XDe#;8noBXQ3ChWf37_fm*D@tj=?iGwrQ0#SjYNZ@=U$Am;2^F63uHn*2P
zRg599OQ}ME#Dz8T;pOs1rV_>kQ-+-_Kbp4?NN}I0Okn&+ZPYczQdi@;)lK&p8=09g
zsPp@*EC|G~z9$T`S~}^OaeiOvEAKuH#2=X+W<}!JfL3k^_3(d=XNBbQkA6^PaJ1=l
zvN|x*ZhH$tEaqN#P7}27I;xC-`$BW2h^hHHbO~q)z*H@xGy;G+mB5bcU3Hi<UOmM^
zTB6&mhD+ftv599;IzZ36U2fIfg(tt3xs_jZ0zcqnH@;P}P`>{oov4_{D69P0;PSt{
za{DhsEel&`6GvNsHG`?epC?6tv$?7xz}3Xj31BT^ZenEhpDJw^6>X<Eaf}ak_IShb
z!n^`3+XyX562o6o(u`8g>C?h|7>v{YH?=8CwSrh~Zdq}F;m?vEg0HJPJ&cStTd(=p
zG5w4?36|os7jBc!lWq^0@0a&uKR{@6M;O;vTh)H-)_Yt@77&=Nz_w0iq8m#IM6|@z
z)~6T~2sLBWY)i-045`r_hi}K@l8t`9xX}#fDkfS)+pH4flJK&y;Me37>#Y5t@8k(H
z0#l7$I<%mfWt0w%Q^G}Sr7y_S30mq9tI|6Qb2<72JE&-30*(_#qeP2snTGJLcq32y
zM!6td#QV@@d}C+7(MIPn*|#T7FE0sh67r7x%>8JT9r7`C9!fF|HHcFh;U-4tltt0+
zWmwd5zBt=blDwh-L|)!BgrY_eFIY_I+%%?~7~ibQi{QijJ*WqDn6a!NMmbTa-X+>P
zWN%+=jA61PNO;dB#>dDs!g%OG-f7GjNV~u*joAl$G{WPf*WPXNmjqX0^o|zc>I2MP
ze~smnu9=@FvBP}O{-CP$Bs6&n`Qm%w+Ab)0!dj@u&Lo3rGAeUoE}QvQeJocfW|%uz
z&4ck0GX5fbIzjC%tGd0@=C%n=FyPAq?@o(At4Qajg`j?Gv?h(YwKos(rA9Q0+sYJA
znB9E5(d(x35sB|tUJQ$e?pT2*sWi_@2y@Nowso6cv=QpfQyv0zxa9rnp5Wc>47+_y
zPX>Qw(YfS`MUjo|Q6Rtx=Pu6$kXW}~&tmatq5Atx@VJ?tG0Kf4&3?k(G*s_n_04_X
zb<qblTIbOuPdj>6GUqjCrdfLc^G&hG<84^ccG|{pd8uH`$tSKpxP4-+hEf55g|Ls@
z2O;Z;Q#o^i+&gsKbr4f+7uMatkGHdp@~C?jY3MN5(22V<jI#H`aJ3;OdK;nURBP+Y
zcAixhCCXBRDV*_WL)hu?<<I&<J%bM%`Pgd1EIRA9^)9`gw~m`F#tSwX+p$*n8_31%
zz0<DX%A8{!DNplJbJZb9eb^>NaZQ77wK2dusJ}vOiH)%o6dVL3^KbiDp}z|?Yda$=
z3tKY=F?S<t7bgo>6Y)Q9g^Y|$oSftUwg9vL6nG|zJ@RXUC_dU~vck%eKyN=Ue;A|S
zQcAF(AVn|g(pBlZ_D$K$Z)Yy`RuW%T`3nT5StuZ&WAL9!N{u2*p&uCYJuW9QRy<yu
zK0yqy@W8q%tGW=YdPPgAR+O5FN*$UBN_jIZNa3^AD90rFn@L4x(G$^6NZE+l?oAH+
z-fLL18~eWFnmB$r86{m=!z<Z9E_dns@xC{U4fQ4}4o*K(w2H=MqauE^&pT!4-F)k7
zh8=BA_@NVkV*X=FruaCKoy<P2ja5DiA19)LZuq;!E|W^l$U;)ZZY<VllHSx=h*9D2
ztBQq*G`*mR!M)C;i8UEb7uiuk1V|)UWa#SYuA~9L>8w2PTm34`^p|6k8)hJSqSuR-
zCG~h=_u%2ts_2n}+;IPN&mvBwemAHdJgb_TYjwmTv-&i;=4%&3l}z2~DCi;tE`>KW
z!u0;hf)}I`UEejG2H#|WQ{9iqgAA={VdxFBmkpMV*&m`!KSDXcx@Mjn`V0cabjw*r
z^viv)KK|jf6F;&7L;r{Z{<i}={{LHk7iSCW|HFWWBf#F?#8K43$=T7u(B-czspe=c
zVrToud!7H2_Q6X3JV_u89;l^;8Ms7VObytmG$2D{>oky+WyHm0^~sdCYXYyU%UD_I
z#C|6JfXkL939lmmpxmQ{WHa9-OB~^In&f*N_x`*-pz%X2XY}UhUAOT;@YKPNyMWgA
z$A*X&ERZ6{Y+_yjBs`4lgkW4}t{=o50kIP}ha<_58=-U#=3#0%W!=Aw)=JnpIq6#S
zI_b=DFCoJf;>RI-G+#*1*365FpDqJQnOklh-OHZqSKwY*;rJ&4m{fTz01zDs5!hP4
z!t<A}I`c}ZmBo~`nbXUT19!fQ9~O>R#CPQ3dry^|tF}$X>;iikyQU;~m34+@);9TJ
z&j2BS@3N9u1qceKJjGyX;)PybM@{WUV=ZfC=#q)i53c%6IBx=0$Z8>JN6Ip<0YLT7
z(2oveB8}3YeQF_NOe-;7OZ||#rBxqtk4&+_3EuDPC)TXUGLze>?TPVm;8dFqMn1F(
ztQ^>c?*h{&f=#6*JM4Y+a=HkQw)gNtKI;P=3C=md+Vjq)+5ii8%G5Fc?@c&_t)<~`
zMe8`329;|*w@=thgPLz41L*UuR?$qhgnN_N$T7GQW~T{0uqp!oICUCSQ#$PZqi6o#
zV#Dx%W8?NuP#A>m?419w0<f0@SlFsK1OB3fjOkx1E2S}8bRm>-;#ju9I4r5{R{Ltw
zDh(u(TC{#pGI=3M&0W9d`l0iC&bqp?v>L9jH^koHSoB{Vw!xn$Mb|(<(NZm3T-019
z#vh6FyFfVyb%T*pQyHKyXHie!UH9%-7ZU3;PD{(93(cuhlNWwMK3b=NjoC{R&#5e8
z0rW!doQ2u#IVvK{3%FTiVrNFA^oay8Dv90}6%H5SP>Pc73r#ezhki%XK<HK@*UDT8
zT?*O7MSH||+6hvzhAymI`I^$wI8*EI2N%~Iyj2vpn&t@nD#gxYof>HdkP)qHT~cUj
zEN9OIILcHG>qnWE8wJP(2Vz>5dY_z>=y*nw3yA=3;~mKP)itf$^ctr7qsh_gjRm!w
z2rw@iral*QvOZUsqQ=%TUG!-1^@7J~C$e~xr#vO>JXvlKtv}Jvq!SD@h^eUH*eHKD
zeVVQI+Wh9I2?Y<nFTN={HWKNj(n;-VCs&&t^^j;K_$7ThID@tR22q}?z5K$qiT;v4
zU(nWeixWzu0nrd(e1-m(=BLef{4syDA^cm-h5l>JMeW>dt?dBDWTGaf02gcL|Mjfs
zXlLg5CsD}$aSs#Q|2zy;QL>v;$N0FIov(0^k;bD`ja$g4g_RS54=VRZR1Zl)Tl^&?
z7EfM-_d4isw!E_{ACJ<0HQ1N!4nSVp%Z^`EwwWD7Pi*{TJ=X!x&j6W7@&02SZAUyu
z-km?*?r*C=Qm(lA+>i;&H7?U^Y;9n-*i+@oj3zVGr_b65W7oSG?!mMbb>I}P6sJv7
zL%)^Llvglb1RpwvdI5iOyvqOjADq2YkS<-*E!wMX+cs9)-K%X|PusR_+qP}nwtKa0
zyU+W7XYZSD?|4tdxyqOoHE(9-h#EO+WYy>gnc9(=8g=B#g8RV4`Nc!_+5;t`i@SMz
z%7Cl3F67xeya<F~$dJh0`M`Rx#W*_1!#5;m;0~;TdAMZ_1*V0+(?rZ+3&q4{!pnzX
zN-g+i4~E^xq00PTJw`XcmkdNK;<wd572`$33d?B3_U4z$d(C~+{9IB;3^xcn2-xKi
zWSU~x5u6ievxFsKi|*S)LUTB??)%Y#D&|^9HP{8We?<_LPxKk;J6E0+S#>Rx!;(Gx
zt0b=<NR-TAg^4L98X5uxLV}4Wf}IHNgewnN@$+Xq!qXqys9noIiru#>mU2X76XNRa
z&|Jgp*%G|}9o37q2#4>?ic3*}-&>jY<dJVf7>eMW)mIhK+2bDzsFC}&9GVs%uiQfo
zWZMPMu5c*}_W;a3F_f6&!~{l1DVcD+O=q!>&AF)emDWw~Kknt38>p^_23m!!`TLVW
zr#Ev56Tp(3lk7so?`duX=%|)7LJVyYFX{=}dGCgGq#l>M=j?LyJ$#|qJDJvG6}wQ6
z0%D*mNY4f!Q{Zri8MB?*#(t+~*#|m!TkCQyc$x)YLl5?Y>qIjg0JO$3sR_`}vP36}
ze&>^t+X_NunTgydeElg834H99uEY(Y1eQkE(&Zn_U*t|R;O5BM=zm-k-iK0|rn$|<
zEWvO~!}0#)?V<V(8tg4ho@ai(EZi#8gJ#zHTViw5zcr{W`eNg%mHddJ48@);^W*2h
zm`UzSow+l3rbBCTOnr7jX}s9U;Tj3)JGAzsD{qdLyO;Rap)odBPr4sr8PZcKzPYBi
z&y111Gg3;fd=@K95GI!j3EA`4DspGU(-7NPCG8*@wMUkTL)Itfxoe`=J3*p((f5D2
zTr3Np6ZJn_?(ko^9LxU)LjQrJo4bIslbNxNlewY3lkNWjO65((MR`=6P%SA)HKZXN
zZ23h&tzZ2PNdCkCKmT9)m$$pP3qm;Ji5>|7Q6vQW5U)`&DGDaIxlSXo4qJQsO~Y8@
zLJ5s88=lpTvywhv-|ujL_)V~OuCC~Y|C(KFts%Qe;><_ERjV;)S<N)HnR2<1UKD{2
z7uSKhf{`(AMPp*=TeZJcRYqIcO`>&c(&LTaYY#noRw2MWVSNP#CEqQ+M|T-3^iAK2
z6VL@`vsn`rnU_*^&=pB(qsEFs6x@kRT3Ol#>cLJlB&LR>G1B!TIva7Nr0^Jruf-g;
zXT{Z<n~t{N=9~kPW-hkJyHb%_OtH5djet~OtuwtcN3HgTCmdK|Wv**3!f90$DP~dW
zg$}lm_-@iwt#VF8u`EWUHy=l^G#?wZ&64vK5vnWX^Qa;703wLZ&1Iq_LSmY3kz3BL
zxargdCDu$%XZh{D9p7-o$K>aAq=2Jfses&@V>4h6d;Rf{4ym|8YWlq8Rj2s;4<58%
zP0Y#+^mJX~Oj~>m5)kyO`^Ys(Va3ck8X1N1_39Cb-`F)D1zcE5`_e${Sm&Sq5~Gf=
zqXuTYbS-V!F?60iN@W5V9cX54!*hU~?1@ZO$+__zg}lNX*%{ZcY=f{<Q?2YPA4NG*
z{l`~2k8z**EZa&nwK2j1Sb<qi@XEFen)&%rd0m4@An-BtCJbyt#+!lnlHXm(JBe`-
z0<g<__}7b56DnZ8r{?Tv50<C|;<(2w5HPuZ3=4tq7mRo*;`baBC3`02i$hnCsmU3O
z^+2IA4*5qKQ#hWVNWf6i6y~GQe|B@^-2?c{9^=PB9#Qm@h-MeHz`AM53O|@No98<M
zawIw2{X%kP&EA22ES|Zu^`7N}B|RqWepwUPKk>2+j04-Cj``-!IYIKSKimW50~6CR
zcA(AufZaiRjfy*bLxc<-<<&FIUCJ#rMa|+H5KEvgb_aQO5%Bdbev!~!hIIoc|GzK!
zK5))Xj{kYwA^oe{is;_~^<U^IR)g}wRl)k{HDc%9wjo+?@h@(QA<A!eS=?mt7fb{Y
zK@epY(bKJrUr(B3Y^NKWut6ky5CZ%n#OPEMx~L;IAh%hB^DNBK5QOi9MTS54<nIc6
zY)#m=Ni8qs9wu#j-+Eqp4!l=Cb_{3vUw`{Kb4=PD?)K-5fS`d$I;C0GN0daI>WO%Z
zD9e>B1sRlgpi7@K$~py7v>7;P;wnz*IfaRZPCG4BnPDp<lh@XY4+lz+p(zJP`O9Rk
zh^|@}b&DFt`2NloN9@N{46uYc($rq&U{|J-T|%-+D~ddg&VR}u(Tj>z-lFwqbQ|>8
z2)oC#2w<+7i*^&*k~e_b`E5a2j>?YRa#pA*sAhoQhAH_%Ln0|8IKL0K3V(T`Fd2v(
zk`RO+>lpaT4Gno(hmjf1X?$uQm}wGfp{b1mtA=hcW?r>50+H-AFtNAoxE3t#nAMZm
zBp8)4Ark__ZH2R#l3{kLtk`r09IaK@!MIgP-k#Hfsg5%!qM$=ktG?$Bd|vTDnx$n{
zGfr}&I7KApw$4)k;o~rlR#Bp<g&9$4`R=VAas;3i;T&ubY~XE66WGr%jtb?(QdiBc
zjS`>c(+)rbfZ9<FCTK|ER}ll2_d^WM4j1k<x~w(0pyKWZhTVQqV}3rY@|GFh${#!5
zF;2F;dl1l%o)4D^vIa^uj!!x?JTUo@t`^8%R+_4FO}->=4u|tV#`EuQS)3g3RUvue
z)TLOpJl2ujJJx82N;<3>24dh_6?G5o)RHc2g<^05V~>v|L7Esoc_khzL2qmanII+8
zV6Lbz#I=L%@2D;^(9*mJ3>1ji9as=}sT22TVrKlr7Cr0X3|0hB+25OoVr<qgLNK7i
zR9o|D`@syWaSs+JZ3bHKSlcD=vGuT8!ztL5D|G&Souf*akEVxiD~G-36KZDNC@oSn
zKfN%Ye4`0vdcC(t@W4b@kRDhnO+ZZoAeH}q7bjJ4Ju5jHv<ZDS2wkbhkp;vTuNuax
zuV?BgR1pyX_Ahr%hTc0^*eNwoLpl2D(!#i5$#RMUUlAQom+BRlA5c!bD6M~RG7mo5
z<oSl|#@nBASU5SxTVqAsCEeBozm(y)Q7tMN*B6eG4AQj8S0%)MFVR~$-^As|QiDL{
zESI`7!e(z+`oInxWE4joQFX<0ZO0iG3sNCH@+IORPibrq*vOhk2x_yWPr{(e_A_A(
zuNg$?WqDM_*&fqy^dV|eZk~|mowBeiK~&@{7H0?cY()mTfj!lw2hQkwqv@!Vw>Gc}
z<Bv;iYG_&e*N#*JwgOh;{*a+tDoC?(b)sWh93Oh~t;|<gVz>LTC2%lpa2ip1ijV%X
zO>?H=s(;*dQRMV=Z8gYnf*L06il@(Q$E7o8MM4?=F=4nyT@?=3TQGp_2QFvo)i8OZ
zQnwx63<_&i!YH%RaXa818X4R-EmYFm7q;HWyB_4u2KK}V+=Oor>KrHcG0ZSQ3ONd9
z3cZee*~e$N?)$*B+3s#Gt*o{z-7-y3bXT*rZMFK)&A|iGDCJgHWzkrc#xD*b6EpRq
zpCC_}CP_~_%x)1n!gQ7t!V{0=C2HTy$pFnPU+6!4j2f^LAArCF{;5y&xFxCp%g{N_
zqO4uvkMiv1h=`TPf*N!d>K<>=8t^_uI1xtXqjz`#?2Q>JlbnDylT)7JdnG_8c3B$Y
zIbkxsf|_i*xl5s@L)dLae#DQPsEVUXggM>G;E-k!8p1Gn+!8(+?a^kA$v^2bjqZq^
z^96@?rHu?KYZ@K7&`Ca!l08e54!SyUu^sI#gB4w+Q_$)5^h2Paj)RK<Q@z9T(abnU
z?CrOoRAec5W@HUp7qN5Wi@)Lu&F7#a;7>ZBC*1U7P!U(K6(B4&*R}r%x#pa8c`@d>
z9!|YQoA~P4!Rr@=(siaUPO+Do3Ox$`>?j=$rMPpB|Ng5NHylzwr_O|gE#ItemT5q>
z;ug`$#azm9(rPv#g;aaQktec@YN$QndY}2X3jMI(wH!?0;Ub^uup~JfznrF)ua;ZB
z=;7tA3FGe|0;bKFvzY=N81!V4n2M#D|A2~&#v<Libg80K<06?@lf8%J*y^LJ;@%e}
zJIn_8;kF`wiI8xzFpEqr0X_E23Wr4Tw_)iJ<P%SJ*F)oFAJPP$Ht8p^mPUU3A?JRr
zS-{+MTnTA=&|i6A6sE>kZc_!u0wLsYLKC=;v_j->VL3lm<ZtO0vE+4m<B4Szlg2OI
z#22c)+9ZX*j(FuNPAnC|9~h&hDcleCPaV<`ezO>x;vsZfRF6#O;zW?GQ?wVJl?9&T
ze2PLCV}pXCS|-Nz^|)h6oCPnjx*%04D8p9_{SSF*o<D6a*is}{iEWgD$x3Ze`Gq#n
ztgx>7%-*0_vIRuQXITSWA+T)DGWyJeSmIR=lqpM_nDN|}flpZ4?H{M>O3kB$-)3y1
zDOC-uMcR~=RneE*+~JkyF@~03_D!;eo<-d@$ek9k2N}tu^YQ)7C~PmpP6r*dFLXiS
zBmmZEJ7Mv$yx#2j9dT1|cB}E-VwoD)0-0-A@JvaIi*q$_?O(2WM#$&&&*rdVpW_=6
zMfml>v?Z<n0{B#o`2>^J>asT^ztr@S;f%FS2B|$FU?{u92W?mKvJbgM>uR2VHN96;
zZ7B=?b9a5}`kHx?%z>V;Jo()OirZDtRs6}>Y9z7p!iz<Ku^S%X2GST}T#O8qp>BA~
zB$6|nn^=eKy99UVkSn?Z=xc1TjTw21J-pS(uB?eFuoL(&SO^REj0?J)KG4+_Y_^Y8
zK=<qW<#KZOOKg`!L+guRYPaw^wi)Id{)d8`agSnFMwD2F{zn-+_LX1f6Y+X>cb>fU
zC#sMChL}h3@<%W&>=%2Xu^hM@;xY;px~;=UZ%RLVYUj)RJ&F-gxo$7_?!B+pEno8N
zWCN|1RZKExNTDe~ZEZCS*NExuAQXk!EQf$r5XfPn(kqnBAQ2A!$TnLS#LK!}z$fu;
z;gU@xB%egLd|&Bp6I^b8Bb(Ewt}K|4iu9X`us_|1qg}m0LGoVdS{&T1zT1^iyN*$&
z-OsG!wJpXPgQI$ApHKE67ufSA?h0Am-&~l?KR+CS9a3a_Fvz{F<wa{hR%=H;Qfqjy
zsi4~Wa(#Fy7K6oP&U=b--fKVFd556i>6H}*?{tE9z5fxZ_KFV#OrU^(sFDATz0v*O
z*_+sZmMV_M4&t`f#?rR7md<wn-3R?|Q#8%CPoBDhyt0uBCDbMyrbOTnXmOtqTuCu0
zAM4`w=GDU2#H9@!<Gs))#t3LM`8SYn(p`&L)P5iXv*XN`<4wEk@#f2{?yo9CiQVlp
z^Tub<8%fJQ{?)eUs&cx^)pN1ha^yCcm_BAG4-q^GjCaPmBO%KamWZW3RkqJX7>gD7
zoFNP(gLp@$Hda*{7qOhG%RXnG<tL0tFU9pEaloT+VM#a~Q}7bQ+L3RXPYTT@Yb;BD
zEf9f&Rnw>=U36kWQ-qGvViH=!jxEUw!;;$BL$1=6d`^`}U?I$tgjDt3)!~cJ#`_o%
zI!2AiIHjSdu9jR|H=_q<0FIue3O7w!PbQ{6yCOPyTd&n-WF)3?piOj>jv(yr)N$oi
zxKLByc#pKsyqU`IWd7sT_Eu1-3bcCAYM}R2T9wc1nIV<FZ5G)>P;Z>tD3n}DUCKl+
ziCK`eD)d|$?c&LHc<j(={j?bPa3pnLQ9ldck5g1O`zvFoJgye1vtpHd@P(v22xw{L
zpN+4;*U?FlWM*S0_E0Zi4YP0cjghbppZ%bwC!Kc^Lcc_I2$(cSKy&@x7}7kRkQR^b
zDW<abT;AvzOy~G_`#tq&CvUm@rx5<9c&g>!lh*%9bHl%?UDW?pJpW4={~wj}zk2`;
z7%yDoW`5IW#>T`en#?5nVq*!dPV)vRy0{iC#SFF0rpzW5IOC5zX%~v|h3)J*?oGBb
zH!$kFRTuyookMqoo>v}WOXi;-VhaHgg{4Z$o^HVK>QgYZ<jqg!x=h1($<p7e+N(>i
zznmxBH>2#j9#8Y5;bze+eNHdY?AMwv?-_h_F5+^dmIJKy-x=>2Y4O;Sq^!*PMM6|0
zHHN%}6wY*&hK}-+AqIgSm-1|>6DvU<%|@!VwOH7Y#ZCG0f^(;q7Mgfkj#zrk7ZI;t
z?MBEj>jHF5*tH%Wgz+m+(!{)e%Yz=|k&SgdHG2sm&iQRVZO75jjENhDhfIv#j>P56
zbnHwZ(I8lKIZHUPMosxdyo+ta9@~b!&gS7w(y}FQtLCB2BSk6rW?S>F+4#)H4$PcN
zYo?l*TNvqEH;iB?I2N@A8SL#FDN79+>B{7P{cNtMFv-LGhFu0r6i}*~&5fSa=@Wm4
z;*<_r-6o_SmnjQ4rl;iKsg}G+JKD+PBpFLhIrT@8kh=<WC3sQO<x!W2GzyG2#gzja
zk%&$)k)tY+W~@w)?C2mNY6|-#&lEnScPY6Vb@+`NV|RCQndUhITT|(jEg(ZD6*x~Q
z4<7cX^WMgz4wX?C$S${}rYu4yr_5jICHr8i<?DqnTXCeTGPXZmINmaroa-5NXs|C`
zKPmDCD_0bPuT312>a##+M02w`B8qmUjsFVS<?mM{ieQonhOo3eMNU>-ES64YelfNH
zmMYQrJPZN=5v%%j$E>K$X+mQ>DXztzIgo3-B8Rz|7t(#B<vF_(Xa8oGMX?>A>0T17
zre;;jtX|316qU;aoFjr}m^aEaX-S;{HY{rU0oPw}tLEuP(AJ?KEU?C~prPq=jnK~i
zwNZRYOTzNT4RaG6OeZOOMOjF$bF%qwH0i22I7m`i`2B}An|s#wK>=M(Xw?|po@u~J
zz`QBaeZ@*tba=6Z#y~`srbZD1WdfNye96xXKI*zs<k2MEXF}!&;vS=Mc5ZHPgF-d=
zf%tvek*&Xi-}Trt-6$b6^94x2ej<e|N8<3vEGJFE#xAwjO9e>2SP0v&cq(Dpnxt3z
z(KSs7Qv;w~5D@xv(S=Kj3FD*{Cxk*Ft?r(n;fN?}XUUwD@?ljs&;p=n8U{6#<bs3p
z(YU5qR*4gtQN~Bai6bvvQ3an)P5QuLQF#nF^d2Fm1bFMNDr)}7+hUqQ25l$}8nkk<
zdZ|ktKW=~r+w?)%^WsdBLcf>Op1|7Xu|xCO(vH+Sdq|NN!jXXgfNd-{1Yne)k!{d{
zI}{}uBX)(`sGdzbO-k!%$|B|#D5UQIAIT`LRTx7M)kwDzRc@+Ix4>^!4JZ&7$LVY!
z#(2_n%W#bM&JYG!r+>o%t3&%s(Lu`|wM>hXUm3v@yDo4mcLaWCj}y=$7=B!KDtBb>
z&{-%Lfv<way_7l8bf=b|H3#UsSMJyvUD{obKcPJvcVwDN-O|ch8rr78GYYkX`CKcU
zc|Q^i7n!ZsEG{u?=8D_=j2Dp(WttlWDJ!8ZX{d*K@QJ^u&Ow|CiBOY$Fm1<Lg*+E%
z@mpx_MbF{o$12Z-o)wm%m|M0t<)C(rN)ePofNoKwo$D&;J{OKIN!xuBezF$By_~tt
zrg1~#1K6+vv*qRosd<HSO%eo&f@PV40S|2{K9K5TVocEyKpbk>`~?e`ywKG_f*&>J
zeDbAprnd<T(x|IdsrVRMOY>AoAyzdET6Q<*dZz1EUm6~Ye|+K7SH)AsJ6~|6`Ya<X
zP_hbiaX-Mg=#-yP7c+eEbxRnCGtt)2eC8AUgD@aw{Zkd`d!%Q}9?9OJ%fM>KR?r{U
zx9TMGP4gFoxoQZu=MfkJ@431kojqhv&v6D)xlNT$T0zHr^Cegp=z>{hmNaJ^zcp-n
zg=S%FdLx1L?P=1Q-MoLTTXLQUP@dS8J`1Z3>268!*GX+5#8<#z=7Rw5jShd$?UxpZ
zt;dgt`F)g2@}m?t5}OpsuoSFcz1OAs&|_C{pZccFWYSAo(#J<dzJExe5`gyADtjn2
zk=xAsmMRDd84u?M!;*f{eaXhX>K-C2*0Fa#Ld=hKiTeiC&yf()p)X$)^Dl}8nE)D^
z;923xoKd<5b*&%1;j%~>wbBArzx{}G^Lt@vzCf6;&uj|kFx<|f=5B=$1CF(vB92eR
zN4sgmbM}c`l3I#X&yv<vPPNH1D$c<49ZUmLja8Lh8pSA4BYHlyy9`Cy(ySQPA}jhF
z(*UkE989x9f??7$W5K|l6b!ewUNy9AGsQqmYUSE=4y^1nUOTj$3PaF_er1NRh(*6c
zz(?h6JhU{#7aLQ)60~QeunLFqqUH-KvQ&*n!uCdp=*CH*$Csd~sX3V_7*5cr84RT{
z97CBr&~upQ5o8&@3wAv?$C~je(GNltVZj)*0*9|~k>7|m<FT1SySE^J4lG8b_om2g
z=DNGU;X{I@Ob)lh7n(vCP!Q8_=(7~L<`H4dBxrWIV@4hWnpYU<S~TGD5WyAOi_-lf
zAud-61@`JDE=2lt)cqoGJlNvcr2Pn1Kr}tpz`=}|JMJ|gjsb`M)u)~$A@-E)q|D&)
zB3F2sS{@{w2sZ1>3;1UoYnzMp7rQHXI(PsZ0n5?MHs=C+8^mbGz-11{PF_RwOJ>+r
zo>EkxV%uXnVz!om%SUFk9dMk$svN${qcFIzbz_0OPbw0)8$C^QTD(CMEZ$d1Sj?_S
zDs@rDM0j#>D-lex_*1u5Z!kTvpQXHByN&eb#m~7(wLAP|&o>K}K;xN6Oc0QLzwUz5
z%jUPu+Iv1eLX(}sus?0P0`b=wScy_HSjfSau`z{dUm_sG-nSm{CaNjRqmP$Hx#g9(
zhRS^GxV`-T=b8zzC3wpw{fA5$*>P@hDEN7X2^!kq<#>VW3v>HS6qDSBoE1!kB<Yb@
zUt#f_P2BMdaPhKji<3fL-Jx)zf$sQjys%Uzn#J@SkyS??K5U$&4iSuu)leyk8!hu8
zOl{dM_c72;ub*$maomd<C?w@mwG7#M<hZiT5F!GyPZ}}LBkA<4)BRN_e~a#;qwLT7
zG_d$087FK~ZWTGs$dmu}u@{1cQwUqGr#5B|w=dcRykho>q#dbZmMiRS#>4+^&&YNW
zJ34AzKl<f}Mna<>lhCNyyOSyLn=boE&?Mk7`x8E2FG|T#y0Eyky0LMN__nhO26Y7T
z=+vTDdhewVMCzu$<IzeLXKoV(q=V9A^oqq8i;V7iRdqI}WMUDB|K`9`xhInmtlh)a
z7QR|Z9hQ%9lgkSFMoT^BxJQ-2H|_>a@(-i)Nyz@#TOQ)pDz(M(*QdUKW0CsR+%^JR
z3pqH~Vu=kI<P_g^+pzx_DtdeD0|+q0Vhs11dAxr&zVe&lXWVH{4r(txIvuJ*|7ZEJ
z<#I!r289S8I|qW+<yNzyme{6E@MwvE=8N)Y85}447!I-!+q2>G#=&z2+)GgRvxabh
z4@=6FF-mB))Mko0EcNBW!W{8_i+jZl8KE9|HQCi<a}g3Zs57g}R0RB&Zw&v9zmkvt
zS-?7o&6`C!qqWftwsdihDm^Lm(!_Q0bVv(YPuczAC)p-V6%FoEY(jjqUG3oPt(tPe
zTjg&HAto2`z1seaav}SuJAlv3%tsnOHS*~_^C@W*>_)8Z`UNJ}Om0ydO)6VFMQIb#
z-~Om2lfwl2O4cxACpT@qu?|a^p~xlRFHv&BC45A1NXjUCL;N<Ivq|jntn$qi@BR+u
z!<)*_u2b%$rW7_|)fVhaYrr?skNVPaZkzaL`fA6xz~?kYgc8J3H%#)9_<Bl{jUZNF
za1v+1ErZH;aM?(O{BmB3>;)wX23V=~<jCc6m2o35r1Fd9cl4hxy2XUXfQhJfK{n<=
zByp;RX{(}PzSD32pR)U#H#upXZvr1`=8{CPm25$+g|TzBh>MQHTO*ggvy~9c?JAe2
z+E4c6p8<x{DV$CSeYT{TUJ@0f#11~v0^dv^-{je{PXwsONM>+^CrM-?JRUmE2!Mhr
zpT@u;F-FgU8yOaJ%wY=Z8e{sY5-D16Z&Yb3c1U<p9$dIB%?fIazH>9JyNY?t7<~?@
zLkI`34?qjs-kgps$uJ_I!FGeSokcDKp)~;=)pTk=4T6S)xJ*&L@DOFS-+w?YEKE(4
zvPYRVafp(ME-M1lhjc#N#Cjs8EhZBw@EP4rgH|U`@<d9iYf1m7Lw>BG_EBh@c1?9o
z3Zq;xIjGzS{yYSdY13tqq4H7%w@q7<2sZ4lh>M2ry{|tegX}VgAnS{VigFp+36@4m
zzdl4zDr?E%Y>jZkp>q)9S+U4NpGXg#X+C1rY#OFr!Xgek82|Ut>%>;j<N`KWVa^k8
zffPFgoOnk$?2$J!r5rC!;Y%d<yl5sce7CfPV!5EEmV==JG?~;zJSocA;0O_E-jlKD
z)Ou}-R0xxKpi?__Fd3{wO<I^pty3^$7_~Wy(x}n7bOeKGhqIVXC9Ax$qn_4e%^zYN
z?Ho-m5E?ZjH8x7*V={IJTIhEcz~pHuZ0#_ogheXX9FKUW0xa}bU0bVKQT0BFe)?oN
zRV&Q`o71lamy!`6F9feq5V58pC_<VKxutVI6XQBRbM;|D*z>fOt%BXiznJyZz~NSe
zroP$=MKt!0MJc~4-~}--$3dRSNP}+lHJzU=MS=qDi_$=lgu5vj7gVI5g3qzjaPKdn
z$(Fb{Z#7Af;RoEB>*3nrrR=97)0K&<Aq)n#L*)Bt8DYk0>trTD-<d_J5t;Wr2#jbn
zEo$2aIbke6z$_sm=uGl0PqAb(H|EDHXz*x#PMgh~a8hPlFTOIPwYhBmwn=E-H4F!&
z2jB{^VdUB<1P(vRxY93|n!3Q?pAtL7TP3Rv;ZnVhCdeMTL-kUJB?Twf@JvrCIp?6C
zoE4an%F)nRJ}kLu`{dh1(R&85{T2}|bC~5|73(~|Z!%BXxFD%KkGRpgwbe2%YT%aZ
z6fI|$Q`__<IcQ?<@b!J6#IwsGoqobx7AcIGP>*d?yct(2Xt*ZD8eYDr&p@m6jG*DH
z!bPH)pU?+V?fE9{Hjj#lUaX$4bIh`d4UwJOe0ZEu=&($RiCz3C&{rF~!7YB_7kpt1
z-u8JRd1Nd(@Y=XR?&TkU1QicG;>qTidHFb+=t4|Hk6OgE13P~mOE<0iR?o@dkoCzM
zm!CQLy6@-V%`UAC(IGL#@B3b@`U0=#@8y*HYlZB$4D{6kr+MW7u>5-W%ITqqivc?O
zKv(=j$Vnma)!>P2bu#!^*lCXB=WFn*Q>@G&%Lg5=_=gV-7@Keqy6Bn4{e9TJ0=a4E
zhS>H&2y8<?*6&_jp8Z4T;L%{|hEx6RLg8H|$0xUxKfJq?$SLRBA<Iidz?u#4RY1VN
z5UNu{UaWa1q*J@|aW2tYsc8?OA+1)WRTzvAQKcfXWPWhKB=jMJ1tu|-?U&W0YGjC1
zGHAS40Ww3wbT_%{9KQioy2LeX_RP8lIw{mvNS}PzLb;rL7?7}3G7Ycx?xLKHER>nx
zZTd6!aF@WN+hlq;<>(`Y+Iv~18pP7@un|yReI@siJs-#6U~DXX8h&!k+3#$SzsK?P
zy5~2ouVxH;F<-a2uiyMYzK8NWSv-R<?>=yKdp!1_`8%)-i^w}`Rm{6fKZ$|g_-BjK
zhi}T-(`$=yB%9-cMI~}BK%9Q}bvrIskZ*@?WV`WlrcqTpk64fy6|L5pZ-;Y&*AO=t
z)}a4}T4T?9-eyeQowuNz63>Sv>YmkoC5Af(`$U~ZlYeHipb(ef$REY4%rZ*}2w^#Q
zmzI`sL<~OW9`4{X#0-PjHp>=NLT#I}my>0p6^L)cJHQs@(HsTy`A+NM^VuxXE7tC^
z-N&`L+EJgI;IG1#5>X<LpyQ{FShJM|IVxB>qmOCM4Kxj(&kbfTKlbzM-2;ew55p`0
z)=6xCY?h2<4!=gVU#Z-*ZqA9E)-~C|6KIxHmTWJ-S*M0N`m>VkEhVHtvnsy)S52KM
zs7*k!*igjdbw?e=q1q?D02L`@_U^3o9CAESm_TVj#tCR{M94BRYwTY%B*h951DcDk
zoDQm>99lBv*Rz~F_W-%rhsF6Yf`s?%C;79~htI0y;6fc@*&6zwShBxtkwdE#b@g~x
zGY{-HCCfzmav6c6t<_1$m?tNNz^&hTvAq<6vA*&{AA3~S$G-<IOI1D_lVW{+q_r;g
z>n>As3w8$11y?(-^Q#X&Bg@cq8CC)Vb&uX$Q%JrzH@;BmM2Z4OXkI)0a`@QD?;y)J
zzZ_m58H6LwL%e5sn!JN}eco8SOX(Rn_xR=l4u6F>f6~b5ZMBM2KS-bn5)uhpcasUr
ze6_JqY_L*KSI<f%&(|!n^nTl)K!{hnR-IuJVYn{mmTVs=syO+AA}+g|E2KU!Y9c!?
zy+lb!Jt*oaYqF774~^&HPe@hPYavB*crB3e@|`JG)ec5PC9Cj8wMKj1D^8XM?Nl9I
z#c=sGS7Rr(KqgP?<#fuSIl~^j7RgR>@Xtyi<u1`xT~aB$Rmdx7p_utR<;iWBmx|;z
zSt7dt_c6otx%}Eobg9Koe$L7mu;=B7LFddNAMe@k2!@@qlvP0E3Tcl}>qtRgbbyxh
zo`J}wI5I76bDVPD@ZdZ6ta0n8+=|>53*V~Ts;oZIbY1hXak6d6$=uGq7T_Vd##?c0
z{lLChKf!Oxv2`Ix)Vkw2?pX}*E&ZUsOVT=`zi3ywuFvVd_j~G+?UCS_AALON1>dlF
zV!Mzi$Ue;LJ|xBCl?&KniJCc)Id$Lh2b=&Dp^lRHBmo|N$8&)!sX4{&kGRvO$>?@u
zDw4T`xsQ}85~XFD9tr4NDRb^IKy(gOguR6+Gp;Q224XlmyK53sxPeVe@g*>Lt@3^L
zI68-~;L99<0%KVSI@gJ&0nS*!NmWtu3?W$dlk!DZk}Bt_Vs>NjdA6F;n7bc#7Ndm|
zeqm(x%e=)2WVJn?cq&J)R4SKl!DLpgJc{UbbInoH3|hfcO(fOjc@bO<o>M!G$aKwM
z(>$xRTHB6PrZ$3NWM_otwq^OWH%4>kO$q$VLzBjipw?mQqUxLF5>@Y?%|m_xHO%#V
zhH%^;i2qSxM^%7?$k2d*CaC^Rg(d#KtFRI_j!ybkR{w{!G+GVLOG^dq=Wo%pr?>Zq
zS*MHC%d#_$ll7uaU<%TRo|80nag=jm5Zt8YeMS%6IL-KEhd&`TF)<`@*=8I=d_)1T
zi+O(39T7-KfYKiUCrEgOKO(58@$NG+4JA5ktA81IZ?<9|oM*ps9bddYcL#ycBa?wQ
z={v2S5~M0RqjyD_(JP+SAUrEBDg#}bW+O0Tj7Pl`xQ!OvwxZHR2a3i4BzrK=8U4}W
zMl1?fH;lwkjXfO<myy`se38aZ?CcEC^fm>}cVz2dyyN0Q;K<z}wn+6Rv{u8?%r?UV
zEFI%f6yg}s4CWj)`r!;lHWfX}!H9EQmqt8hHBH1NeX!j4Hn5}7@<Udau{hq|CSCQc
zDRxofMmxk{V8Ds&n3+){VMs9SIosX+uw2kQz|2Qx3-!d&0^I1*BL^l^=2rREqOL>A
zc?%;lqDFurc<lIx>Yk>SaBGK5V|FIrgg=b6P#RFC!DtwilMeQk+~e_@II*}}sLa_T
z&6Qf_N>B_W)x4@4SgA;8>T@Zh@iQ#e<2sTbyt1{)X{~Wtv#nGIytP^u!?dR9f4WSn
zw%^*S+{KXHm)Phz)Wo19Bjv*!@USD^EGyu7zmAp}f1$itcEm`eP3ba&ZLxOM!Zxx}
zmLXH-%_)7BEYX_b_=X&2=UfB@xC5gMlr&E421@6y9A1u8m2$=O*JB?Sit3%0jlqXH
zUN;q?L8aS+HDjNvcMI-sM3-^y1Uxz*9}9uNSQd#p!Wt0$(w)wSLD<ez5Ftj_XSC#w
z$+E3uuP{TF$K&pn9EGaNgO>t5KIZLb)HFK%v_d>7PR@%e`m=sV$5eN6!GSgD_KeE3
zDp`k$H@PTO3MEZ!n(9h%DZap{h9z4YgJymsi&4hoB}w@Tsv}N<$%2v;4?{&U$SO9K
z_j59g#5OxQhYpS%p+m!0z6YB{Wp}AyqiBb&kqK}M!7B#Jnuc1BQ8CmjFq9f#EQD57
zI-KIzzPJxGsU@btYglF}FzUyyq7#IeDdyfWRF5~>;)&eX3!*ZXd?1^0hpcOPfTFsG
zRIbZOsELIj4uU*-Qw)cHQ#xI+`$b=52#W;7eJJAkjv1K5;}k`QL=sPkW|*J~p8!Sf
z@#+%%073WHSXD2cvAt|%-jdeF;#yqP*~%!E&CjNM#gLgYQ?^b`&t=DHS`gL~DR4S;
zRSb}pDd8e0#&ZRh4&Z~Hp>rV>G?&&yfldGxF=?7zUl8S{9MM2HlEf#0_^8(yB$r>o
z5HSl{P8>?e0J|75>?eC=x#(o^#8#ZRciW2FNAnULJc<IbAwk7<#l=G0*Lvdg%30MB
z;QYOU4yLx?t{x+y-$WHoJ)*vufknYxGmsi_C!#F_kH=NJi!BLVQG0c4A~vd4SB1H{
z&jmc1hWko=eBTF$IvR!tpIKz)(Zjt&P9d=w-Bun3{NsG@0al7otfE2*gQh~=GyZ#F
zxUNyA&r@9j+NNYIP7<&6_TF|+HNuUH$e4~6D-{^Ga?>7y;Jp>9%ke>C)U^%Us!vBl
zdDbW*;0C#Z`}sa5Wo3ny(kIsb%*HF1SduqjxzRXyn;>#cw2W-g50d4mol7h*m%k5T
zy@x=7jlvK^%iCJ}6CrgP0<SRoWzT2l^}uOf{NN;}DVqx0QhW@j&>$_XO@gvBoUq{i
zwwc&d$%!WnDdir~J#*PZv!Qe}Dl>n%gy>><&`EZ^eMMcD34~((Ost`q-q3Ca87%gQ
zlTt(6r(n;Xhe*E7Wm@ttGMXIpQVji6y#1QuV^fG&eW?BEZcCFy`dhBWT5#?>8WB}K
z+xe#x&nVGmaBkv;-jM9v7(*M@TCi?HB%KQraz(_ttO`P)G}?Cf4mB{|#5xA$*@KY<
z8zbsx#D30ikEv$+fd&oMgIzPPDcyldY@g`AQ8Xv(QochD-&#GKy(oxq)Bv)Rv7;co
zhs5|=V|&qS?M0l{kHzX^f;RGW*%GHyx4^<W0$<Y1D`BB1E<`lnf`plLwAOLP(7vm*
zLJO9$qSo6MQP%Tpt6-@E6biQT?@B*Q>(PFTWM(n$zr%kcZ`r%pTi7Jqp}!@-IbAZh
z<(30>fC|BnCdMr1AYM~LUhZriYX3$AUw#Kg{KyxT5xKz9i0bk3uC}HCNOtrANi2r_
zEMcD*1P|XJsLeJsDV&ZfbAx&tr}WUMt)%NYvTdBj9%tM65rPBNC>a^b`EiEY^wDW}
zjbi|JYms;>&!7>%?(5&}bWSp;VNj%r9+7Q>!$hmgQTK^Xj1tnv$z)EG@ad|;SfPD&
zS;^Y?Wnz}gBJE{!L#T|&6;SCZj?<^eCr*v+FLD?Fh4IXiSSlk@77Gq|Zhj?{Mk9V+
zen$Qh==b}_F%AD>_XV?UeMg@vy#;N$;{+?lSTtI!M2e)pPSt4kw7=Yros;pg|H_n#
zNvr@XREA?Kh#3cQ5uSG@c*oFtfda8?{JCX@27+2FXJXInFB)Voi>MJ^lDxHK?DzYV
zDno13OuELnIqkE45i#7*jksi?7Gt5C9mT1-#N+KacbPaHW40j7oZ6GF@%URvrG2=f
zBD5$T+@ZB#LNbn5<uR*KP(_*HP&<(NQv;7lk7Zt*VGI{fYV?o5%uqwtOx@FER=5&W
zi>Pap$$?>r!-_nH?wlZlrNuFp>}KM;4RcQjiEx{;xD0^^dT^rDD=#?WGIP?7LBfKR
zw4z7*FT447Ch2^P7wCNp^WM<Ys*S$)r=0-2va(Ho^CxckvrT`jodLWw)*#Lo{~t;D
z==L-3;7th%30GY;?tnM{mJI=EDgA!PbKqtjp|aG=0n``<>k?n8ERLY!z%uE*rE0SZ
zseEG^Y%@8qFKQ5~DqK;m-70}B6tll@vwofi+h3=oL>G#`6(OBhz=1E!S*z1l_`<Nh
zfj5pBaEGe={wn1P+MW;=_zZ7Xd1OR-DRyYq*aWNIJfIiZ#kc+jGsTGrwXfI3`$O}P
z3if%PSai|H4R8ich4|b+<omF5tnbudSe=Z#>9eZUtYLtEr4TQS?9NE->6vp6rU!@b
zI$!>*Q1b@TMHlzgW~f6Oy<1%c#m|p>Wo`Ju!9}cHQR#4o+#H{FqE&3O#&mUo$92oN
ze1J6|4EFQ_7-POP=m#E-00C}j8Sb}YPP!%%*OVC4z&;~TOYQuWF!xXS;*#4IYh%Q#
z0n3$dOk#Udwc2To2{Zn{OaVInPhAJ|eUSJRFrjswkL5%>%t59~YZq!tZabCl$-kN$
z`y#q{>MHr-p2W|nz2kYXM`)-nX}-P$S{oiL)Xpvz4%iW7p?VePs!}l8>0wzgwuwKF
z&Rb%+8>#;EVkxfia)uMK<iNkey!uJ~@I>`)#rhWA>Ys^G!MB(KF^H$acpDFh_=G<r
zDInfn4t@Chwbs$>(xc?W1Tf{hpt5-?7PM_GE;Evnmk3iC%ScLZMu3jyXBY0Ob+ND%
zK9<u%uQLOJ_kR;}bcPIBMH~Y(>u^{Ba_MOYYA`N>P_L0&fa1Ucoh0OkGg@79f<B{n
zm4-aS)4~CE+H<9X_<%oI=Z5E-(f^PNt0d^oiJ=1fa0OkhROC_Di4PQF2ieY>9i(~O
z-O1mivTMVC&kE^KC?>i;CWa)^8;jj(OG*c2_Id1?ny+1@JP=rWq#^G7ieeQON1YII
zk{^vP6CYVGQy*n42-1ASn^P&5)nyi-lzY-tBRCUOBT>kBHL6lrsNaVw_fhTR+awn%
zhno`s3@uU~jhHEqMD=P5-TUtK1c(d~sieKSUBgSx(HEjGp!M1d#Pj<b*BvVN(&@d^
z&ZURxO#HjpNjyr&q1p(NIaCkaI<eyagxL0+xPLC@I&>4emrUI_b`$**dapdx{@Ld{
z`{e)6zMuR~`FrVb*VHzewA3Uw;HgC@9`?KhKeb(H;9c3adU&wMLxv*P5(qV9$iF~n
zu1IA*pfa>#jQ&;h18IZ>X{VYY5;d%8mmNT4HH4Bn`bq8d!>BJ7Nu3OTg1N)WuL07I
zwn3}bQoJ@$kJmr{F#yTN5e*)}00I4={r@lk{qOGKf5rcdkpK4_Yy9T_{68z?N4>eZ
zX2ql9&IXOgS*L<hWEe*P6;(jsmT6nIb^g-dNQ+^JFU)o?7!vTG@qaBeB&@Ni&$nYa
z@g07^Umz<3z;6BDUbC%E8LTbEEeF@_ysMQh!f?f6<C286$OQCy8}Y=Zp-epU?mVIX
z>MPNeZEGp(^5c?xjPWI<b}>iOQhX~LW=m}ThpU<u+O?R+^DRZ(inOsZ4x?tVk$a6Q
zcD5EaY(S*PwGfnGo>#h)%pWny#6AZDL4KBo;_+T)CYkY9iu&oI6{){(zkAh@27#5>
z8z{W#4(9l6cjV*H7$<ym4@M=1d=g7RM9F-vdq)MesJB_2L{}!_!p|0UQzvPA>68jT
zs8!ef`}QYv1AlJMlmF-&KTY@tjx$A+aZu`8!IG45Q5y2pnt+BNyd}$@l#KB+2U*D4
zt4w3f1Pu0r);ey{<@NniUa6_o{oVW>b+*B5lI!<N6H^_P??34j&fx~O{O90L{`IQ>
zg#Vh(|2E>NL%HFMI{OF#fwl#}ClnZ+)~zO)`E!WlAyEmn;NmyPAQhl0is_A~r1k}9
zL#-LRU?iBWN^Xpq$F!Iumxd>eIBc&tX;DOLLKPJXpQCj;FBX|E7MX60*ld)jW$c6&
ze%b=X5kgIv7s?Tsm>y40WxjmB^s;*$ap(5P3U7+Y&J8=Bgt+qVa8(q`otc!d&S%WD
zjA$;Z`V5Sj*XXC;btTU;+FWqzI66tkSjzJ7)|AR|26ruHj9GAs#Wu@E4L@uMZ|(Am
zc6PKBx84L*byqg<X^kEI-i@-nvpzjPPSZc{uue0?<gMO>pBZ?qiNV9`+{gNIx<L7b
z9FT-msaN{+5uHVEmTesC9J8)TUh0}t-y9CLeU1AYPi^w(^AN4+yvRlKV#@qj{ltGh
z(PQIDsXOmIi<PZpGhl_nvPy1Zd^-Rb>mn+>u_-Dqx*7CiauHFdG*{*XI>uh}d^u6}
zBBoK7nbm!wdpQzraoJjF(%FP)ExmD})NXI4TZ(@4_~`|+WbYd3(e4%feMfOnGZBK-
zwQJP=@zV@`ax)h4K4>!*)Eul@aZD~cz{Quq<D*<7e|ZVBh>*^fkf0h$(GUCeqJ@yE
zDXMp+KRZLa+5KXrI$*>CP<J`EEpaA2cz!rI!F#rWl&a9!`Gp?Ip1R2wLiOPy?fT)6
zaR6xn->P;+2H^^E=F$;Zod*rAN^nuC$|1~e$x%ZB_beaBrj#j|c}g!pr`WWM-9E!d
zlM1rqr#~vEF97G^GmtH9keydD5w4gpYNr=e0NtzvTfiB0tIv_oxaDK@-5t0jknM$k
zxy;il6>Dwj;K^^TW(Lt|o4)sm!<JNcIZk**YrYOv-3&{(jVwzK8?)_|spG_6D+j5`
zs4K?5O)_T7;rT`^upwkUc?#%|n=3>RPprg(Tpuy>XQ;L@cWf!cl5$mEbXaaO?#R%u
z$l!#kPmm3{b}I9nmCY+ORbEwW3`tjbYSi4AmZ{h@IU?r<USeiQlKOsDBG8U+zU%_e
z+`$9Dh8eQjw5d~zd!G3Ozn}dQ(CQHbeKY?vS8|I(tQfMGC-^~0HFkj+dxp#cB7j{0
zV$~BEc1|{}){+5opl<Q~W7(;X3)R#(3bBEqMJgV8`nz%fG>%ym<WY45>e0GZKMFAE
zkYB=9PY@B^mI0@_)-^3Ripn*UW|?b?qBP0O+9v&*)$S8A*GX`$hg}qrpmyDBS%bEm
zRduf?Bac;_K-8r{(AWEDi`2{%E~%>?<=00%gy;UIs|y$;yf%XfF0W1<oNI$4|0zt=
zs%_L6E~z0TPnuT2u(XhuRy6aZPgysFwBejY@W@$GUi0z>Tp9`(hSsU(j-0zm=-Wi<
ztqGOUf^ab2Z+2TO<OB>|Js{mzbq1mN;s8PTY*7|8a;6NJ?5{Lz%-yS*1yaj<%%Mfj
z$@#!XkSqdR58!>Qat1a~sVDHWt4H{hul|S?74~a7%ywAQU{`9V9RCFl3P!&rV&;)f
zJ+4&`d44U;M#%ccUmrFev4Z^4H%H1b9sPI+3$b&*V)h7z5ru|_zSx33&}->w0%UgN
z_-8u2{>XcoBhb~~3w7O76(OxwoOW<&D=p{d#nxSlaawj&`%O@aW2EbUoEcjES(2x>
zdcQ;F<fk(ut6O9~S8orfbPR!CVD1_uf2UGV^9|CsE;7a{(OlR3m1n|ANaSdmxo%P-
zPqmyhZkc%A=Ax-4=De+}Ll-*-9-GCubr-|dILp)+lC8FFKRp~<V^a>`VX7fQ6or1H
zI}ftf&*v^D#-@0yLe?0XG@4h)fzT+|W-SW|+-*)zkAr0D5?;0{Q-xQ;l*U&B)R<V)
z#8SFm1q{-jjCIroGOXx&rw_W&=eKZT(%lr2S0{u^4mPrAP${4!Xl_j9G{J-_!&M%I
zlY|(yowr@ca)i$?fw=s}N|D-WH)u_SDi>x`d|HQkj!6!#h0T(;=DU6V(_&Pu0G_02
zr-v^ibCA$x(`+W~?4-jb!m1rw?Y#j6Bw)`U9pMOXIS97Mde3FS=pC^7c4mrE^x}SI
zCYgV7>Yju}cAGC;CP0cnROZ;AZk}HK=NRMz>>YIQK2hM^{T&Q!c&qde64(PH$dsel
z^c2Ua;sZ5V)v4E58l{Sw8fwSH*3qg=YGYR3T$h1)t;X0z%Oky0S_xK)ul<gX3b9W|
zNZ7!GQLpiZr=tgcCovHJWbvfwDc9-9(rm|3crX!9CV_9TPx7!YoV#)Sif8_DQLYaN
zHi=zm+;zYsGQ{P{sWIYY0vJo^Gm+MTX^bj0RT_{l%yLPgvGMK$AmI8vrwmH+o6Q@L
zuXgJCYP96`^rlqy%Wm~A9phx`pHMW4NAw1bm=_SRR%(XNp1jS9Z5H2W1k`uv4>FdM
zbqjx{rf>OthDCyWha@OF7gc#v4vkHx<jJX7#kSepx!eZJA6P)Sb6)N@t{r#aAynWG
z*-2S%UhTsyN*8pyM7+Ea`54$)>S-!gzHc;j!z?x7X<I=Yu!Y}u${W_*?vXnD++P@E
z$a>!)om4NYw=*qmS`9;icec?*{>5HG4A?-NG$-Ik+vGzUZzr>@mKn1`*qa|egE|?`
zZHTj8OzIzrAD!$f1ZA-MA3=OH`kc;=OnhDHI_d2z9v&V-5KGP$en?f;?FATjl{RmI
z?cfinKY~k)^gxQbqo5OQez(88zEqTP5q*}pTHRFMML_gs-FU5V0&EZ%=1hFpDO1Ap
zh*9gk1O{{(m}({449K!bRaNi}k9fZdpw2s2_V$dHMWhlXaN9JSC<`>I(tByoFj{{V
zh|6T1O)ZeX1$F3sZQ;6TQmoJrld|~%-@2VI<C1JE0qq64NtK(_+*fb8mQN#6?Yr1R
zXaUDglJ7F>jOCwlU7otkV!FUasOAALX6}07M^EngnN=dr707%Uz_d6xxni<{Q#S-2
z4MjmrCxG1q3=wXK2qWnu1)JCXU`_HlLrM%&`(X_KkslHf193VRuIb}EDl{eQ(x*os
zW~<MBS@Y*DV$v+3MMCA4Qpzi7-Xk*vTpFZz?oBbeheUc(NP*?7MFS%wzD#*S5jQ!3
z@8bgz6tfKWur$R@Nfq86W{SiTU!!!Z>v3qiZ@B0KFAK;&22wFLu8Muyq9Mr&&fqm7
zRegRhPmB0YX<#B{emqsFj<qL$_k&H^fBUVCy5MI0tS0|li2BqMaMmhv?BN}wXZ6@?
zE2lbt^>|-KgY4%KhYV@;88sHqV@)eWw`;kA4uuKUE<VhKBch=qiuD_{c(vg*1P~9m
zdnf+koKv5MYhZy1JNTp1zAIg3GrnxWL5RP%-zj<qz?+YC5I(3r9_POL6_1YE&Z=yx
z(UfEv1m7)!p2UHJOoHBE2A1eZO5K;a!$$+cq@B(p?Ohf}uzV%dg=Q_JdONs@Z*kZw
zyH^?i!$!7ANGEmy0joMEX?HB~*z#v5(#4z9*()QXX8wF>m!(;_W?|!01$ww<;e8UB
z53b3dEd@OsqOJ)4s==&C+!dd0AtkbCO5V#Z;yM!DT+8CtxFWaXt$K`gBVJN=F|+38
z&dFV?3n#ZYIv)MzS$ROM=o+R-Sm<@l`>{(+dfSVY3)4M*hxQb>d}lU+pY=36n&nB<
z<g~xvvWX!XHQs!KUxdIP6>+y)nU1YN+=_VLJw9e7e`P)BPNrO$X(1`2BsA|53|j2y
z%~iB^-d^=q|B*n3Ot&C;{$j_pjOcuwPXuu1@Pt$t8KX|mjpQ%;sPsD?vGf+lzxzV}
zAW%89v@le5Q2iz}Id|j~wd#lZ^WHk`f&37gQYO7Y;ev5C=R@$)_#R+0F(Yqtik)5_
z#LgvSYpE@g3q|Th#GrL4T~YaMZV?gcm6P&L%*zL6xfrT>enDTq-iwal9_dsg&L8x2
zQty+I^XT-Z>2-H8t0>kr+*%lKlarbMQjDzrY1nqt5a+tQLhOA@*)lp88k_UdPox`h
z$A_UPB=SBEBTtn<y+FqCv0juLoxqiI>p@Jia~j6Lrbs|w{+=G!YLtJXST{Sn9jCeF
z2c~I;cQrK4M#$^98S^*0@mcd16v5@wueA#_FLt{(9Z^#T6CSfp;ssrMmfkU&jmvgd
zA=K9OzMN=bcB@cB)6;vAdv^ebF2uHO;9)VwM4w2#a*MqhCs$6lsG3swmwcmoksR~2
z&F|}(gM(Et!iV-H#2eVf(a6V4=0`B7ECxVcvRC<EZZ7AC|EIOHfQoAS_c#I~9Rfqi
zAR#%xNDD|e3`2K!H-ZvM!_cjObV?&3DJhZ?3P=b8iXh=29pb}#?|T=xUgZ7X+iMLm
zGwb_VC-*vgpY!{KtGa;zFQp7EddhPrI7heM#W<!MzmPGM_oQgXI@-RiqrEX+tjhb6
z44U|Ki~JZm<K1n9%Fuj|RwMUiL%%RDeir6@ji!!Ojoo-0^OS~7y#3<_GcVq?*foPm
zhABGAm^CnE@|rXMm6hw(35jcb+EuJWhh}{*LA#;{g?943%5!)|gwNgQq8!!iLT|q`
ziwGE=!2Uk)>8%o-dyrT}^-@^AqvGi773x-{QQ<iTjpJj6BP2P=gYhb>BZ<+M^20x#
zJgxV8j(%Kp&5Kjl=NbVGv;;-uNquLc7TqoJ`(PcS^pUXEd&;eGR1SdcywcoaHcD11
zB7tELGM}|n2_x(k40k1DV%mreZtMXI)THxPF=O@jZ%#ox*S!)`UM1ZnB_%Kq`%%Eh
z*7;PjvR-@IJ)6-)vvVxlGyZ6e4JOe(P8z(qOVZV>{~>r?M7-|$w=OzN|4=0lsV(BJ
z?<C8^+`TCx@`#>=nJc9f8RSA5;n%+5Kz-8uZ4&@r<DvSwH5=T5g&x<+Lg|9X7$tAt
z_|`4RDvA{5v82&}qRN{=hP_Ytfyt%UexAHJ-3Abn-vy@_juHMCZb%@V(xvPC9dorc
zz>hJN8QB#m@PKT!*)=A)a>i)fVgn4q6vK}km`4>__y)@vpi!-IGt-HfDg3a13llv3
zCaCG?YIzf&UX+?VC*DMjw8{syWnfhM{pX}Z%Vp<EG9L%t%pdn2DDKpMI^NvE`1yWD
zZeP_K*4;Y~>Q8<eX20nZs+<17?<4;6D=UmhC+{A#(~{S->#lc8)UCSqeXsVE`=SjC
zr_cPs+WLi7jUnzMf%R69SrPv??>`jdw`u(4_i>SsJa1fdJx%rN>uCi?%YPR33X1>3
z{2M%5*(%1Aq#{z0`NFp*$edMbM9I`dMnQ(0d(7zLtee*a+p6??yolQ_)OtbWU7b`0
zk4Ve~#lvHUf}gIg4nEnv^HpK6KjY;~UlgqXCMR#Vt^5O7M>*S!qokHB-Npl$!&QTB
zXY*Cm7Wh@xc~2R(o>0#!R@x4m_!_EP2Dy%_a=h8Z&88ITtE5rA!+M70TDDLv3XL~=
zGo9{t@N4pv;ne%J3xq*Yj;>oV?V-(l2KqitI@~&Lg%5#2_%giybk$2i3vsR9_>=jR
zy-D(mAxii7iBh&(Ynk4H>A>|2czMfmvpj~}yRTu~5$FmT(ixoaI<wJRI6252*TTdr
zA59RD-v6?vc%)!d_(F9OAVVxaMP}x77YFA(_6R9e2iQe$0j;)Gq0%?Kj-c4*Es=*Y
zPGq#QLV7Tng@2%rMMEgz<8o~(PRWsCb0-v6)5l#+A}!G(;-Vreg^yM&D?*pK08Zh_
zAZQ&eVrgE7XNtpaNK~vvvPPwOcF`7jQT=tEB%7#ai^tV5v?^U)6dV>!aUT#BV_%5g
z-uz-~zw3|B2Xu_ZsC|0xAVNXN@A;`3lEcPx5vA?Q@Dv+-(gofESpTlc;~$)l=RV90
zgUXyyMn3Hd-`3vqD=Jrl;@(%-<qArt*FBCZGR=JnU;KvQkb#lxRKNh*4y-S8YGP^H
zEjtPdKrWt+Mv#D1CcXn}Bd8rjTEZcWcE%g1U42Ghh(I_yENMocI9??`QvQ^B@W*uj
zD#p=OL1ZK(;Qywm`hV|{KPx_py1JU%o7nwh$5fAg^RrIpD@(|aP94b%k@u=B5OJ0y
zB}x3Y_)NyFmiG$r_PnVTsbc{X*EU!MF@WAkRB~ydz_g(KJ>SCt(Bb~}@f9S~2~$MX
z`)O&YAiyPz9<Ivv*}K&|Hd!uQj+p*+IBJ;gTgDqB=Ja|uITPgTdMPsogYNOonUjCa
z##U>lO;?a|@s`u3_&)GPQ-{#$3A&WoaBlBS9dngz+v=zfG(a3^uyV{?itu48sT&ZM
znCMx`#lgpHN1m@iN8TaL(tF+Bli}Iw$en)E$XXm6v_q^)Ko)==$8q6m?=u`$v{F}d
zHTSl;3Xe@fB}pyEyN6#7IMEEsg;)IXp5j&;hlnn~T99b1;!4AZH;hvc*y>SKqO0#8
zq0NlXis00?9{y25W(BN!M0c{rY%UyPWBZp4;Np1l%gx%{^=AP<8Dj^te{P6KHC;^#
zb)sWMSx)EcI&xVF%se<SYC4I+E_C~MD$El|#1)Spw8i(xa)6(Zy-~;n)fD?6q^t1`
zCdP$=YD>(iyf<fNhaOU|6S84kNwz5M>3^T>XgFB6oAL1F5oIf*U@!w75M<^X@u|L&
zepSp)(1OUc=P_JOZ*;z8d7=oWicj}b)J2#Ja%DG92&!CEXECsAdd&)@Gj(86hdcDD
zk?vPk5}0mbzVGdCd01(qO^4_e<Q9`QPFB!Gx1PKeSBAB$42rW1X2-KsxmpQ4yo35G
zlbv7PI#f6R7U_HxC{I3)1Qh!rX4*YSVKx@G*<01K*CJ&qH-Q`(o3hyZX#uN4^2p}C
zy73;lKenZOyW#Yfx3aY-hhBu`%2<B92AD9QvHO{$&a(EpB3L42o7^opb9pWQ9e}Ed
zL=<(6zn!mZXa@1r4HQnJYM&mA8yr*k;+USABQ2~BEi9AJ(mhR-L|jw+-D}m3JD6VY
zsv$of++CePAI#B|#$y9-aar=2HmW}yPWIR2YRb#5A=2{j(UqoR<3I(4kdO}YMx-3A
z)F$Jr8Xu4;k|!;Mp?^^KI|PeNMCujPYv!wPb-H6e%k{T4aaG<c{S+74ODU$}mrpv0
zSHzWDq@K@Cw@caMv>x-dKRpde3QYd$@J0X7eYJ8pW`LC4Q^MWv=t2@+q^7TxYIraT
zyABH>MAZGx3XF}#34ULdu7zfm);6kCHAh9eTkQo>uTnbM@C8zYOw`$y!Rd$JZ`N-$
zn~$;+Lg%G#6URHiIVn{iTX=R9FE%$5H7sy;FCy+Zu&jW#C$o!GT00}2pf7^Ui9D9{
zRCvMo!aD1flv=IX4N13L=&pm!qMVO1lsqa+LJ`Cr%g-RGt)LV^$FKt=i3QdpVSc<_
zL`_PFBPknKE6KB3M~%+6KH@KIs<^!CpvU=x(}gJ-qW1n@$qou~-OSu_K&yo&{6#tI
zZEBL?T=?T+uYdGKzGcYE3<$8eTUZ+fc^-EV?Evicmt)E*xv8)%?JawQut>H_Eom_L
z%Uc6a`EE?+>So+U*OnsR5Wc&zwn+_Xd8PcCr5}UzRM!3E`D9Vmg-r;>w!lXs1>@*(
zXnU;69m@<u={bk*c^<gbuL3?yOBp)cV|*fSN3GK#z}-|A**3k#8nc1G@@@sEdizC_
z0!`C|%5HyLwArh6tqOk9El{qyHA7Hl%)<*Tgohh?9LsH?1<M@VVzPP7Dm=4KyK!Sy
zs82|eQFf`kwlZ!C?aeI>{zz6LTdh)Kdn>FR7P+eM7kh+yTQoWkrH7+K5*`Snefb=+
zmv?LtLw7fbXR^KXURo>d0sZy(E!4^5KSuBM=?@%tP>_&z(EfwTn7<yS6?b&7u(ot}
zG5$p<W}kR_D4{5Rw`JClO7sW-KbP4h)aQ|kZl;Dv0z)EdSGB)iOpJYFGf?kqN+Sy$
z`Tk8`G(#&B(|Ii6M^wFhQ;nk|z}lXH)xjUUjRMaPS9YT_kYfBG$Qf+xoAr1mu}OoE
zbpXj-Dw1i0@;aq#EN>IIxwS`ou|K=#gKfar8bz@nb?xPTtGC$B^<u;U17Yq=+Bw^~
z{jNmM-@7qA57fE)8Ic&AJr}5)*TaSTgt>>=w4p?f&uh>PWxRcV`l#KTP21x0yfhU)
z^0EKeko;<W2^d)!lB^P^*oP^vzf^5t`QXb_b6)Nm8hM=N8cTLhbX4f_9SD<JqKa3S
zss=~%5LAS*FSw|$3vHYLeYIANnN#&}|0!|q<N}4K5i)${;S)^yS?7Xv9PVONsi^`?
z^%U)10691Ehh3MM-p;%76s^SUT;Eqq^-Og-=tS<JM?6)PWK)f|uemijP8<OwSTamh
zf3HV7L=jGf4o1%LMYKbvd&7?o#@2Uwe2oPjeslTyt`_grRYXVRm8Ad-<N(E@y<=>u
zX@E$DzsFT{tq*sv1cRVNH_@rrXGm^hcT9VU7`--H97`MtGSRf{=KU0Kr3{KsnpF0s
z6gi@E-l6LT&va)_rGx!Zra+DQ@ZgQHRnL$eM_p9X>cPfGGz;Ve2Eres({}bFcl?Me
zlPYP)ZU)AVQ?7NT8wZF>d2|v^!9!9+mgX9EXd_9C+V`S62?ge@1ylDXZ$^IpHjmX!
z(y8kYgzsjVU!B68<T09}o-*0g1?WcegaSWs9XZTdU3q@Jdbkq~-`MaV#hSGdqw_An
zh@VcK|KP?*Zr2`BfH7R&`j9$QbXpNV7<h!T#bA*NUg`XN)4E&SY9HAr%n^UzB;+&o
zr(o$DM_DXF%X8Kq-Xm?CWqa8H?DY%bxasa)1vidj1%y7$-O==(Y@=#i7{zVDW?|dw
zw-ji?gf<}1?{&A0&lO<--4T`*>%mizU0z|cz@_gfKMyID-WM`oe?Fgn;UUF%;UOjI
zX>RKNiyChlhaQBIM90BG*Tp=!SRIE*gKDiu5HUKKh1HKV4zihyV2`HE;@D<ZU(G;t
zMG&Q#d%pgA5~4)JM76{czK9#Xi0E&gmb}(+Jljr+itB^@-`5u!IXxCL9y%UhH9~RV
zOcS_Y^>W+ONCp<|#7$s@)fw-nbh9jvvx??PRetcOj{j)WATb+R8X)8r?G38M4FcL!
z9%Or2+1s9sF|t9UD)b;M3UOA}l?4i(*s>2P-3-rRVuY_Mhzy|OW%*`_uKF6PTmrrB
z0p7#jwwtdO$DI75(G*{_kqRoa7I*KnX~VIvK%kN;4GBt~W(vt1WM$Gj0xqBVqAej1
zkE}T3VFGJ47-L)tYzvnX?mQY~!;v`5J;G(~00u2rxmV?vNF3xZ)`3BcR(BLh_)@9>
z1g0Z}QMNWJinqD$4FI7brSb3Vaj#kxm-H^?U~l8(?eumJzlhGt&T`Hm!K!$TLSln{
zKl+1S;dUl2w}I#FhiuO(I<a^cVddrqo?xhVsSyIu4R2@0jEn9Iww@@v*8Bo**Q<iu
zcV1*TSAtrQ9a(FMngx%ef4n|nLKLh&Rm_6zjuWYW^&ls|5CLExGb%-TOL((uKuGrU
zvt>jhBi?Jyc}ZITc4tCyTjfC>=_(r+{lo<C#ahezj4am~en_CM-BNL;R*;Mm=&+W<
zUg-s7@y+WgF!R!S9SShzqmSJmirB`+!Z9$3&C1VG(|v1C3k0Z7NMO*z5~h~1>o?HF
z?Vr7cX(3FWXBOewV{f8Da2KS*LV}-A50bkvZR%D+z);=tvB%4C#?EA;G=ANc`hg=t
ztbRg0H}08s_oH_DlQgEGraxXD(EjRHA|&Y>UMdxmhm)$4{l1z)AG<IANxIH<c6a4$
zU&VepBUxHd{9XTeUl;TKFE*_h?(9z!OkL>Z27(0MO+lLjX>KHNDh`_{Dg<!Z6G4O*
z=I{V;%5S((IHe-pHDRtGk9<PhbU8Kg$-C1xMz><G+!?4Tv8EbUWLF^t@N<Zpix)he
zfDy!!t!<E-(#tR^TdP|kCmL&sChf|?(qa^Z))G9k!Z!`CiO-=)ici2wz(R6-rW$EE
z5QA6FYOT?+_p(sGYro62x);@b|CP1I8_q!f>XJA_amq4D<g1Johhs689R_#SwQ@t#
zx4ezcRk<AklJ0QHFNU%ZsJz8~vva2HL8;PlQ&WVdpeIH-2kMW9AvoA8laIM1);g9)
z%e|bC9fw}A7ZT;&PcgQ3ezUB`sU08T!nD?|8w8AVl#LpwyUQ2gQCOVRcuUVS`ZXY8
zSct7P95kgN)EWY8ijMvkoA~Sn0z+I~Z@4q*yMi81#yp6-Ucy>^W-rayzFtH5*xQF%
z&$p+dS$Z>CPA=)N+st)BxIKDOeT#w&m>kam-7~MTYYq$WZhi?+up?RZmDh~bsVbP+
zi)u6XT7tkV#<Y1d!(Y(B4p27qwAOMP>28(5sK}<tWO)l27eP3&QDekMt8LJ|Aj~^D
zzAKH+>aBgdY2ka2K!lep`dW(A8|FzMZ=w7I^+yW}i~w9XD*fFG#I?khfOHMDXKW8-
zx6MYy^{DWt2v(LO8kYPt{m7j+Ml~Z}?AXgfk>l9#W3^;{)FCalW2%j;&O+MqjTlK&
zAAJRUF{w<)0JZq#@m3t6Y3O*)f!G2A;1m5+aItvL*J9#zLHIrn6+`p3d2LBU##qtX
zONh1H;rRMt2SeV-1F;YmkOb@M=3Ph!N`04ji={Quo5(mol$MOH=b*o}aew=Uyw*D(
zEC!RrIyh`wjZ4ypJ&<8T#|pV%T`%V?vQ@WvQyA{nWEI{u`}^p$wQ5fNN!`x9Nd?P>
zGWhC#f=uWHw}|PIXWE}=d8jh-`FV%~gle7E$$MNqWE_Fk<H$UfTdh6Rhsu$6=yd(Z
zE2lj^v}=06aSjHb%k}O&3rz!Pte0JfcQ-J5f6hs4EBu;D-)oFavW_1IhaT+4B$6K(
z*vU7%a^3k}|9ZN!!QKT^88X5oppSBA&0+*Fyyws2Gy65Y^V6L1m6XnMO*z4V=XHS#
zOuA@Zkrm^c6RD$>>Vc)Tm0m6r&0J+P^^l4o3A)Zn=C9cg?tgkWq^}lKRwfj}%=0wT
z;aNUJ%8H+irsf?H?sL_Q0N9T|N-83S&@QT<^jBTjKl`jJ$V5ng_gWQoIlyHcB%~Gw
zBqaQkUh8awNUDjl$|_2+E69pVDymBUPhWLDCdnFi)$8Q1gp(K1nHVtcsThc;qO6pp
zsu~+a>R+Rf+fip}PCjuudEGt}wQ~~n?`Ahq7fW}0a|bs`PgC<>c|*=~?99p_4ktbN
zbCf@aH~wyq@Gs*0Qc7|@+_vP}6Wx>WTGT(C8Gko<!i&QH5;2NexS6~B33B}n>8cEF
zC)>#)=wJKONB?)j2V8<AW^Uo=VlHLv;_9aAZt~aXzd?R|w4OG7vOk&N{;3fEyH%21
z0x5qP$K-kDX`%Vq#k@j&2`0qa)z#X;@-LUUi{)jIr@hZ-7qgA_639z=)6X+ctA+W_
zFmV_z&AdGBv{Cl#ZVF_&H13!7;`5}_mQs#0q$HM0kS@PSrzMfXXFw&amjGQ-fqI^L
zTE=$vWRe8_J@t2Is#8Lxv*Eei{|Nt`-R*q%Y3~o{O!!^?--lo7WO&+la&|A<6hQhv
z>4eUcPOCLU&yWm+FChJ|Z7S!vr`-%fXSn*JNdI3NkMq#easc)-&;)U$|5yTXo^rat
z`Po$(D)~#wf2bWe&pllSn(GXgS@vS?Z;Pp)N1ZNONPPz7rEnqYH@T<l*|DC<y`%BV
z+)ETdJkL1&v?lWz#yzbI82?@;?>yl24c#<n07v$}1pM10pyz{6-&%Zj?eIUiF!+MI
z!_PBLPq*GY!@%&qi1C})({pB2XJWO(e;NDBncMTJrze8Wp5|8~f0=sG?A!V9(?h{*
zXTt5Ge;s~_nWgiP(}QDYH)(hLFCmv0V?NI~eKEs$hC!Zu5#wJ5-IV07q9OeeOpSzp
Mave1I^yh#71;!EW(f|Me

diff --git a/src/main/resources/assets/rubymod/icon.png b/src/main/resources/assets/rubymod/icon.png
new file mode 100644
index 0000000000000000000000000000000000000000..c1222cdd5956e4e9f04835bc7c9423078d78f551
GIT binary patch
literal 4079
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

